import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as e,a as n,d as p,b as s,e as t,r as u}from"./app.60956328.js";const l={},k=n("h2",{id:"\u5F02\u6B65\u7F16\u7A0B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F02\u6B65\u7F16\u7A0B","aria-hidden":"true"},"#"),s(" \u5F02\u6B65\u7F16\u7A0B")],-1),i=n("p",null,"\u56E0\u4E3A JS \u662F\u5355\u7EBF\u7A0B\u8BED\u8A00\uFF0C\u540C\u6B65\u4F1A\u963B\u585E\u4EE3\u7801\u6267\u884C\uFF0C\u7F51\u9875\u52A0\u8F7D\u9700\u8981\u7B49\u5F85\uFF0C\u5F02\u6B65\u4E0D\u4F1A\u963B\u585E\u4EE3\u7801\u6267\u884C",-1),r=n("p",null,"JS \u91C7\u7528\u5355\u7EBF\u7A0B\u7684\u4E8B\u4EF6\u5FAA\u73AF\u65B9\u5F0F\u7BA1\u7406\u5F02\u6B65\u4EFB\u52A1\uFF0C\u4F18\u70B9\u662F\u7B80\u5316\u7F16\u7A0B\u6A21\u578B\uFF0C\u7F3A\u70B9\u662F\u65E0\u6CD5\u53D1\u6325 CPU \u7684\u5168\u90E8\u6027\u80FD\uFF08\u4F46\u524D\u7AEF\u76EE\u524D\u4E0D\u9700\u8981\u592A\u9AD8\u6027\u80FD\uFF09",-1),m=n("p",null,"\u540C\u6B65\uFF1A\u4E00\u5B9A\u8981\u7B49\u4EFB\u52A1\u6267\u884C\u5B8C\u4E86\uFF0C\u5F97\u5230\u7ED3\u679C\uFF0C\u624D\u6267\u884C\u4E0B\u4E00\u4E2A\u4EFB\u52A1\u3002\u4F1A\u6709\u963B\u585E",-1),g=n("p",null,"\u5F02\u6B65\uFF1A\u4E0D\u7B49\u4EFB\u52A1\u6267\u884C\u5B8C\uFF0C\u76F4\u63A5\u6267\u884C\u4E0B\u4E00\u4E2A\u4EFB\u52A1\u3002\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u518D\u901A\u77E5\u7A0B\u5E8F\u5458\u4EFB\u52A1\u7684\u7ED3\u679C\u3002",-1),d=n("p",null,"\u5982\u679C\u51E0\u4E2A\u4EFB\u52A1\u4E92\u76F8\u72EC\u7ACB\uFF0C\u5176\u4E2D\u4E00\u4E2A\u6267\u884C\u65F6\u95F4\u8F83\u957F\uFF0C\u90A3\u4E48\u4E00\u822C\u5C31\u7528\u5F02\u6B65\u5730\u65B9\u5F0F\u505A\u8FD9\u4EF6\u4E8B\u3002",-1),f=n("p",null,[s("JS \u5F02\u6B65\u7F16\u7A0B\u8FDB\u5316\u53F2\uFF1Acallback \u2192 promise \u2192 generator \u2192 async + await\u3002"),n("strong",null,"async/await\u53EF\u4EE5\u8BF4\u662F\u5F02\u6B65\u7EC8\u6781\u89E3\u51B3\u65B9\u6848\u4E86\u3002")],-1),h={href:"https://juejin.cn/post/6844903760280420366",target:"_blank",rel:"noopener noreferrer"},v=s("JS \u5F02\u6B65\u7F16\u7A0B\u7684\u516D\u79CD\u65B9\u5F0F"),j=s("\uFF1A"),w=t(`<ol><li>\u56DE\u8C03\u51FD\u6570</li><li>\u4E8B\u4EF6\u76D1\u542C</li><li>\u53D1\u5E03\u8BA2\u9605\u8005\u6A21\u5F0F</li><li>Promise</li><li>Generator \u751F\u6210\u5668\uFF08ES6 \u8BED\u6CD5\uFF09</li><li>async/await</li></ol><h3 id="\u4EC0\u4E48\u662F\u56DE\u8C03" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u56DE\u8C03" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u56DE\u8C03</h3><p><strong>\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u7ED9\u53E6\u4E00\u4E2A\u51FD\u6570\uFF0C\u5728\u672A\u6765\u7279\u5B9A\u7684\u65F6\u95F4\u8C03\u7528\u3002\u8FD9\u4E2A\u4F5C\u4E3A\u53C2\u6570\u7684\u51FD\u6570\u5C31\u662F\u56DE\u8C03\u51FD\u6570\u3002</strong></p><p>\u300C\u56DE\u8C03\u300D\u7ECF\u5E38\u7528\u4E8E\u83B7\u53D6\u300C\u5F02\u6B65\u4EFB\u52A1\u300D\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getA</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">getA</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Promise \u7684\u7531\u6765\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// 1.\u540C\u6B65\u4EE3\u7801\u65E0\u6CD5\u53D6\u5F97\u5F02\u6B65\u7ED3\u679C</span>
<span class="token keyword">function</span> <span class="token function">requestData1</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6A21\u62DF\u7F51\u7EDC\u8BF7\u6C42</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F20\u5165\u7684\u662F\u6B63\u786E\u7684 URL\uFF0C\u5219\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6210\u529F</span>
      <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;\u6210\u529F\u7ED3\u679C&#39;</span>
      <span class="token comment">// \u8FD9\u6837\u62FF\u4E0D\u5230\u5F02\u6B65\u7ED3\u679C</span>
      <span class="token comment">// \u4E3A\u4E86\u62FF\u5230\u5F02\u6B65\u7ED3\u679C\uFF0C\u65E9\u671F\u662F\u4F7F\u7528\u56DE\u8C03\u51FD\u6570\u7684\u65B9\u5F0F</span>
      <span class="token comment">// \u540E\u6765\u4E3A\u4E86\u89C4\u8303\uFF0C\u4F7F\u7528Promise</span>
      <span class="token keyword">return</span> result
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> errMessage <span class="token operator">=</span> <span class="token string">&#39;url \u9519\u8BEF&#39;</span>
      <span class="token keyword">return</span> errMessage
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">requestData1</span><span class="token punctuation">(</span><span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u6CA1\u6709\u7ED3\u679C</span>

<span class="token comment">// 2.\u540C\u6B65\u4EE3\u7801\u53EA\u80FD\u53D6\u5F97\u540C\u6B65\u7ED3\u679C</span>
<span class="token keyword">function</span> <span class="token function">requestData2</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;\u540C\u6B65\u6210\u529F\u7ED3\u679C&#39;</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> errMessage <span class="token operator">=</span> <span class="token string">&#39;url \u9519\u8BEF&#39;</span>
    <span class="token keyword">return</span> errMessage
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">requestData2</span><span class="token punctuation">(</span><span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;\u540C\u6B65\u6210\u529F\u7ED3\u679C&#39;</span>

<span class="token comment">// 3.\u56DE\u8C03\u51FD\u6570\u80FD\u4F20\u56DE\u5F02\u6B65\u7ED3\u679C\uFF0C\u4F46\u4E0D\u591F\u7EDF\u4E00\u89C4\u8303</span>
<span class="token keyword">function</span> <span class="token function">requestData3</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> successCallback<span class="token punctuation">,</span> failureCallback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6A21\u62DF\u7F51\u7EDC\u8BF7\u6C42</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;\u56DE\u8C03\u51FD\u6570\u6210\u529F\u7ED3\u679C&#39;</span>
      <span class="token function">successCallback</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> errMessage <span class="token operator">=</span> <span class="token string">&#39;url \u9519\u8BEF&#39;</span>
      <span class="token function">failureCallback</span><span class="token punctuation">(</span>errMessage<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">requestData3</span><span class="token punctuation">(</span>
  <span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span> <span class="token comment">// &#39;\u56DE\u8C03\u51FD\u6570\u6210\u529F\u7ED3\u679C&#39;</span>

<span class="token comment">// 4.\u4F7F\u7528 Promise \u89C4\u8303\u5F02\u6B65\u8BF7\u6C42\uFF0C\u4F20\u56DE\u5F02\u6B65\u7ED3\u679C</span>
<span class="token keyword">function</span> <span class="token function">requestData4</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6A21\u62DF\u7F51\u7EDC\u8BF7\u6C42</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB\u7F51\u7EDC\u8BF7\u6C42&#39;</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;Promise \u6210\u529F\u7ED3\u679C&#39;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> errMessage <span class="token operator">=</span> <span class="token string">&#39;url \u9519\u8BEF&#39;</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>errMessage<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">requestData4</span><span class="token punctuation">(</span><span class="token string">&#39;rightURL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token comment">// \u6253\u5370\uFF1A\u5F00\u59CB\u7F51\u7EDC\u8BF7\u6C42</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// &#39;Promise \u6210\u529F\u7ED3\u679C&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre></div><h3 id="\u4EC0\u4E48\u662F\u56DE\u8C03\u5730\u72F1" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u56DE\u8C03\u5730\u72F1" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u56DE\u8C03\u5730\u72F1</h3><p>Promise \u89E3\u51B3\u4E86\u56DE\u8C03\u5730\u72F1\u7684\u95EE\u9898</p><p><strong>\u4E0A\u4E00\u4E2A\u51FD\u6570\u7684\u8F93\u51FA\u662F\u4E0B\u4E00\u4E2A\u51FD\u6570\u7684\u8F93\u5165\uFF0C\u50CF\u662F\u63A5\u529B\u4E00\u6837\uFF0C\u5C31\u4F1A\u5D4C\u5957\uFF0C\u5F62\u6210\u56DE\u8C03\u5730\u72F1\u3002</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getA</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getB</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getC</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">getB</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token function">getA</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token function">getC</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// B A C</span>
</code></pre></div><p>\u8868\u73B0\uFF1A\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u9700\u8981\u4F9D\u8D56\u53E6\u4E00\u4E2A\u51FD\u6570\u6267\u884C\u8C03\u7528\uFF0C\u8FD9\u53E6\u4E00\u4E2A\u51FD\u6570\u53C8\u4F9D\u8D56\u53E6\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C42\u5C42\u5D4C\u5957\u3002</p><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>Promise \u901A\u8FC7 .then\u3001catch \u94FE\u5F0F\u8C03\u7528\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\uFF08\u5373\u56DE\u8C03\u51FD\u6570\u5D4C\u5957\u8FC7\u591A\uFF09\u7684\u95EE\u9898\uFF0C\u4F46\u672C\u8D28\u8FD8\u662F\u57FA\u4E8E\u56DE\u8C03\u51FD\u6570</p><p>async\u3001await \u901A\u8FC7\u540C\u6B65\u8BED\u6CD5\u7684\u65B9\u5F0F\u89E3\u51B3\u56DE\u8C03\u51FD\u6570\u4E0D\u76F4\u89C2\u7684\u95EE\u9898</p><p>Promise \u6709\u4E09\u79CD\u72B6\u6001\uFF1A\u7B49\u5F85\u6001\uFF08pending\uFF09\u3001\u6210\u529F\u6001\uFF08fulfilled\uFF09\u3001\u5931\u8D25\u6001\uFF08rejected\uFF09</p><p>\u53EA\u6709\u4E24\u79CD\u8F6C\u53D8\uFF1A\u7B49\u5F85 \u2192 \u6210\u529F\u3001\u7B49\u5F85 \u2192 \u5931\u8D25\u3002\u8F6C\u53D8\u4E0D\u53EF\u9006</p><p>\u8BED\u6CD5\uFF1A</p><ul><li>\u901A\u8FC7 new \u521B\u5EFA Promise \u5BF9\u8C61\u65F6\uFF0C\u9700\u8981\u4F20\u5165\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u79F0\u4E3A executor</li><li>executor \u4F1A\u88AB\u7ACB\u5373\u6267\u884C\uFF0C\u5E76\u4E14\u53EF\u4EE5\u4F20\u5165\u53E6\u5916\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570 resolve\u3001reject</li><li>\u5F53\u8C03\u7528 resolve \u56DE\u8C03\u51FD\u6570\u65F6\uFF0C\u72B6\u6001\u7531 pending \u2192 fulfilled\uFF0C\u4F1A\u6267\u884C Promise \u5BF9\u8C61\u7684 then \u65B9\u6CD5\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570</li><li>\u5F53\u8C03\u7528 reject \u56DE\u8C03\u51FD\u6570\u65F6\uFF0C\u72B6\u6001\u7531 pending \u2192 rejected\uFF0C\u4F1A\u6267\u884C Promise \u5BF9\u8C61\u7684 catch \u65B9\u6CD5\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570</li></ul><p>\u72B6\u6001\uFF1A</p><ul><li>\u7B49\u5F85\u72B6\u6001\uFF1A\u4E0D\u4F1A\u89E6\u53D1 then\u3001catch</li><li>\u6210\u529F\u72B6\u6001\uFF1A\u4F1A\u89E6\u53D1\u540E\u7EED then \u7684\u56DE\u8C03\u51FD\u6570</li><li>\u5931\u8D25\u72B6\u6001\uFF1A\u4F1A\u89E6\u53D1\u540E\u7EED catch \u7684\u56DE\u8C03\u51FD\u6570</li><li>then \u6B63\u5E38\u8FD4\u56DE fulfilled\uFF0C\u91CC\u9762\u6709\u62A5\u9519\u5219\u8FD4\u56DE rejected</li><li>catch \u6B63\u5E38\u8FD4\u56DE fulfilled\uFF0C\u91CC\u9762\u6709\u62A5\u9519\u5219\u8FD4\u56DE rejected</li><li>\u603B\u4E4B\uFF1A\u65E0\u8BBA then \u8FD8\u662F catch\uFF0C\u89E6\u53D1\u540E\u53EA\u8981\u65E0\u62A5\u9519\u5C31 fulfilled\uFF0C\u53EA\u8981\u6709\u62A5\u9519 throw new Error \u5C31 rejected\uFF08\u6CA1\u62A5\u9519\u5C31\u7B97\u6210\u529F\uFF01\uFF09</li></ul><h2 id="promise-\u5BF9\u8C61\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#promise-\u5BF9\u8C61\u65B9\u6CD5" aria-hidden="true">#</a> Promise \u5BF9\u8C61\u65B9\u6CD5</h2><p>\u67E5\u770B Promise \u5BF9\u8C61\u65B9\u6CD5</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>ES5\uFF1A\u5B9E\u4F8B\u5BF9\u8C61\u5171\u6709\u7684\u65B9\u6CD5\u653E\u5230\u539F\u578B\u4E0A</p><p>ES6\uFF1A</p><ol><li>\u7C7B\u4E2D\u5B9A\u4E49\u7684\u65B9\u6CD5\uFF0C\u90FD\u4F1A\u88AB\u5B9E\u4F8B\u7EE7\u627F</li><li>\u7C7B\u7279\u6709\u7684\u65B9\u6CD5\uFF0C\u4F7F\u7528 static \u5B9A\u4E49\u4E3A\u9759\u6001\u65B9\u6CD5\uFF0C\u4E0D\u88AB\u5B9E\u4F8B\u7EE7\u627F\uFF0C\u53EA\u80FD\u901A\u8FC7\u7C7B\u6765\u8C03\u7528</li></ol><h3 id="then" tabindex="-1"><a class="header-anchor" href="#then" aria-hidden="true">#</a> then</h3><p>then \u63A5\u6536\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u4E00\u4E2A\u662F\u6210\u529F\u56DE\u8C03\uFF0C\u53E6\u4E00\u4E2A\u662F\u5931\u8D25\u56DE\u8C03\u3002\u5F53Promise\u72B6\u6001\u4E3A<code>fulfilled</code> \u6267\u884C\u6210\u529F\u56DE\u8C03\uFF0C\u4E3A<code>rejected</code> \u6267\u884C\u5931\u8D25\u56DE\u8C03</p><p>\u591A\u6B21\u8C03\u7528\uFF1A</p><p>\u540C\u4E00\u4E2A Promise \u5BF9\u8C61\u53EF\u4EE5\u591A\u6B21\u8C03\u7528 then \u65B9\u6CD5</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res1:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res1: p resolve</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res2:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res2: p resolve</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res3:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res3: p resolve</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token comment">// Promise {&lt;fulfilled&gt;: &#39;p resolve&#39;}</span>
</code></pre></div><p>\u8FD4\u56DE\u503C\uFF1A</p><p>then \u65B9\u6CD5\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570\u672C\u8EAB\u6709\u8FD4\u56DE\u503C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u4E3A\u6210\u529F\u72B6\u6001\u7684 Promise \u5BF9\u8C61</p><p>1.\u5982\u679C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u503C\u6216\u666E\u901A\u5BF9\u8C61\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u503C\u4F1A\u88AB\u65B0\u7684 Promise \u5BF9\u8C61\u7684 resolve() \u5305\u88F9\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res1:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res1: p resolve</span>
    <span class="token keyword">return</span> <span class="token string">&#39;then1 resolve&#39;</span> 
    <span class="token comment">// \u7B49\u4EF7\u4E8E return new Promise(resolve =&gt; { resolve(&quot;then1 resolve&quot;) })</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res2:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res2: then1 resolve</span>
    <span class="token comment">// \u6CA1\u6709\u8FD4\u56DE\u503C\u7B49\u4EF7\u4E8E return new Promise(resolve =&gt; { resolve(undefined) })</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res3:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res3: undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>2.\u5982\u679C\u8FD4\u56DE\u65B0\u7684 Promise \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;newPromise resolve&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E\u6253\u5370 res: newPromise resolve</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>3.\u5982\u679C\u8FD4\u56DE\u542B\u6709 then \u65B9\u6CD5\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;thenable resolve&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res: thenable resolve</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="catch" tabindex="-1"><a class="header-anchor" href="#catch" aria-hidden="true">#</a> catch</h3><p>then \u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5373\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570\u53EF\u4EE5\u6355\u83B7\u5F02\u5E38\u548C\u62D2\u7EDD\u72B6\u6001\uFF0C\u4F46\u8BED\u6CD5\u4E0D\u592A\u660E\u6670\u3002\u53EF\u4EE5\u4F7F\u7528 ES6 \u63D0\u4F9B\u7684 catch \u66FF\u4EE3\uFF0C\u6355\u83B7\u5F02\u5E38\u548C\u62D2\u7EDD\u72B6\u6001\u3002</p><p>catch \u4F18\u5148\u6355\u83B7\u9876\u5C42 Promise \u5BF9\u8C61\u7684\u62D2\u7EDD\u6216\u5F02\u5E38\uFF0C\u9876\u5C42 Promise \u5BF9\u8C61\u4E3A\u6210\u529F\u72B6\u6001\u624D\u6355\u83B7 then \u4E2D\u7684\u62D2\u7EDD\u6216\u5F02\u5E38</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// catch \u4F18\u5148\u6355\u83B7\u9876\u5C42 Promise \u5BF9\u8C61\u62D2\u7EDD\u6216\u629B\u51FA\u5F02\u5E38</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p reject&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;p1 then error&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: p1 reject</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9876\u5C42 Promise \u5BF9\u8C61\u4E3A\u6210\u529F\u72B6\u6001\u624D\u6355\u83B7 then \u4E2D\u7684\u62D2\u7EDD\u6216\u5F02\u5E38</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p2 resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;p2 then error&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: p2 then error</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><p>\u591A\u6B21\u8C03\u7528\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;rejected status&#39;</span><span class="token punctuation">)</span> <span class="token comment">// reject \u540E\u8FB9\u4EE3\u7801\u4F1A\u6267\u884C</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;reject \u540E\u8FB9\u4EE3\u7801\u4F1A\u6267\u884C&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;throw error&#39;</span><span class="token punctuation">)</span> <span class="token comment">// throw \u76F8\u5F53\u4E8E return\uFF0C\u540E\u8FB9\u4EE3\u7801\u4E0D\u6267\u884C </span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;throw \u540E\u8FB9\u4EE3\u7801\u4E0D\u6267\u884C&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err1:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err1: rejected status</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err2:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err2: rejected status</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD4\u56DE\u503C\uFF1A</p><p>\u4E0E then \u65B9\u6CD5\u4E00\u6837\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u4E3A\u6210\u529F\u72B6\u6001\u7684 Promise \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p reject&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8FDB\u5165 catch</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: p reject</span>
    <span class="token keyword">return</span> <span class="token string">&#39;catch return value&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8FDB\u5165 then</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res: catch return value</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="finally" tabindex="-1"><a class="header-anchor" href="#finally" aria-hidden="true">#</a> finally</h3><p>finally \u65B9\u6CD5\u662F ES9 \u65B0\u589E\u7684\u7279\u6027\uFF1A\u8868\u793A\u65E0\u8BBA Promise \u5BF9\u8C61\u7684\u72B6\u6001\uFF0C\u90FD\u4F1A\u88AB\u6267\u884C\u7684\u4EE3\u7801\u3002</p><p>finally \u65B9\u6CD5\u4E0D\u63A5\u53D7\u53C2\u6570\uFF0C\u8FD4\u56DE\u65B0\u7684 Promise \u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// resolve(&#39;p resolve&#39;)</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p reject&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finally \u4EE3\u7801\u6267\u884C&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// err: p reject</span>
<span class="token comment">// finally \u4EE3\u7801\u6267\u884C</span>
</code></pre></div><h2 id="promise-\u7C7B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#promise-\u7C7B\u65B9\u6CD5" aria-hidden="true">#</a> Promise \u7C7B\u65B9\u6CD5</h2><h2 id="resolve" tabindex="-1"><a class="header-anchor" href="#resolve" aria-hidden="true">#</a> resolve</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1 resolve&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u76F8\u5F53\u4E8E</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p2 resolve&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="resolve-\u7684\u4E09\u79CD\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#resolve-\u7684\u4E09\u79CD\u53C2\u6570" aria-hidden="true">#</a> resolve \u7684\u4E09\u79CD\u53C2\u6570</h3><p>1.\u4F20\u5165\u503C\u6216\u666E\u901A\u5BF9\u8C61</p><p>\u7531 pending \u53D8\u4E3A fulfilled</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u503C\u6216\u666E\u901A\u5BF9\u8C61&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res: \u503C\u6216\u666E\u901A\u5BF9\u8C61</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>2.\u4F20\u5165 Promise \u5BF9\u8C61</p><p>\u5F53\u524D Promise \u5BF9\u8C61\u7684\u72B6\u6001\u7531\u4F20\u5165 resolve \u7684 Promise \u5BF9\u8C61\u7684\u72B6\u6001\u51B3\u5B9A\uFF0C\u76F8\u5F53\u4E8E\u72B6\u6001\u7684\u4EA4\u63A5\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p1 reject&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: p1 reject</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>3.\u4F20\u5165\u542B\u6709 then \u65B9\u6CD5\u7684\uFF08thenable\uFF09\u5BF9\u8C61</p><p>\u4F1A\u6267\u884C\u8BE5\u5BF9\u8C61\u7684 then \u65B9\u6CD5\uFF0C\u5E76\u7531\u8BE5 then \u65B9\u6CD5\u51B3\u5B9A\u72B6\u6001\u3002\uFF08\u542B\u6709\u67D0\u4E2A x \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u79F0\u4E3A xable\uFF09</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;obj then called&#39;</span><span class="token punctuation">)</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;obj reject&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: obj reject</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><h2 id="reject" tabindex="-1"><a class="header-anchor" href="#reject" aria-hidden="true">#</a> reject</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p1 reject&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u76F8\u5F53\u4E8E</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p2 reject&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="reject-\u53C2\u6570\u4E0D\u53D7\u5F71\u54CD" tabindex="-1"><a class="header-anchor" href="#reject-\u53C2\u6570\u4E0D\u53D7\u5F71\u54CD" aria-hidden="true">#</a> reject \u53C2\u6570\u4E0D\u53D7\u5F71\u54CD</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u65E0\u8BBA\u4F20\u5165 reject \u7684\u503C\uFF0C\u90FD\u4F1A\u88AB catch \u6355\u83B7\u3002\u4E0D\u4F1A\u51FA\u73B0\u72B6\u6001\u7684\u4EA4\u63A5\uFF0C\u4E0D\u53D7 thenable \u5BF9\u8C61\u7684\u5F71\u54CD</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;newPromise resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: Promise {&lt;fulfilled&gt;: &#39;newPromise resolve&#39;}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="all" tabindex="-1"><a class="header-anchor" href="#all" aria-hidden="true">#</a> all</h2><p>\u5C06\u591A\u4E2A Promise \u5BF9\u8C61\u5305\u88F9\u5728\u4E00\u8D77\u5F62\u6210\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61\uFF0C\u5176\u72B6\u6001\u7531\u5305\u88F9\u7684\u6240\u6709 Promise \u5BF9\u8C61\u5171\u540C\u51B3\u5B9A\uFF0C\u7B49\u5F85\u6240\u6709 Promise \u5BF9\u8C61<strong>\u90FD\u5B8C\u6210</strong>\u5219\u4E3A\u6210\u529F\u72B6\u6001\u3001\u6216\u7B49\u5F85<strong>\u4EFB\u610F\u4E00\u4E2A\u5931\u8D25</strong>\u5219\u4E3A\u5931\u8D25\u72B6\u6001</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u591A\u4E2APromise</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p2 resolve&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// reject(&#39;p2 reject&#39;)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p3 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u6CE8\u610F\u987A\u5E8F</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p2<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// [&#39;p2 resolve&#39;, &#39;p1 resolve&#39;, &#39;p3 resolve&#39;]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u4EFB\u610F\u4E00\u4E2A reject\uFF0C\u5219\u4F1A\u88AB catch \u6355\u83B7</span>
    <span class="token comment">// \u5982\u4E0A p2 reject\uFF0C\u5219\u4F1A\u6253\u5370 err: p2 reject</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="allsettled" tabindex="-1"><a class="header-anchor" href="#allsettled" aria-hidden="true">#</a> allSettled</h2><p>all \u7684\u7F3A\u70B9\uFF1A\u5F53\u5176\u4E2D\u4E00\u4E2A Promise \u5BF9\u8C61\u4E3A\u5931\u8D25\u72B6\u6001\u65F6\uFF0C\u5219\u65B0 Promise \u5BF9\u8C61\u4E3A\u5931\u8D25\u72B6\u6001\u3002\u8FD9\u6837\u65E0\u6CD5\u83B7\u5F97\u6210\u529F\u72B6\u6001\u3001\u7B49\u5F85\u72B6\u6001\u7684 Promise \u5BF9\u8C61\u7684\u7ED3\u679C\u3002</p><p>ES11 \u65B0\u589E allSettled\uFF0C\u4F1A\u5728\u6240\u6709\u7684 Promise \u5BF9\u8C61\u90FD\u6709\u7ED3\u679C\uFF08settled\uFF09\u65F6\uFF0C\u65E0\u8BBA\u662F\u6210\u529F\u72B6\u6001\uFF0C\u8FD8\u662F\u5931\u8D25\u72B6\u6001\uFF0C\u65B0\u7684 Promise \u5BF9\u8C61\u624D\u4F1A\u6709\u6700\u7EC8\u7684\u72B6\u6001\uFF0C\u4E14\u8FD9\u4E2A\u6700\u7EC8\u72B6\u6001\u59CB\u7EC8\u4E3A<strong>\u6210\u529F\u72B6\u6001</strong>\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u591A\u4E2APromise</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p2 reject&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p3 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p2<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
  res: [
    <span class="token punctuation">{</span> status: &#39;rejected&#39;, reason: &#39;p2 reject&#39; <span class="token punctuation">}</span>,
    <span class="token punctuation">{</span> status: &#39;fulfilled&#39;, value: &#39;p1 resolve&#39; <span class="token punctuation">}</span>,
    <span class="token punctuation">{</span> status: &#39;fulfilled&#39;, value: &#39;p3 resolve&#39; <span class="token punctuation">}</span>,
  ]
*/</span>
</code></pre></div><h2 id="race" tabindex="-1"><a class="header-anchor" href="#race" aria-hidden="true">#</a> race</h2><p>\u591A\u4E2A Promise \u5BF9\u8C61\u8FDB\u884C\u6BD4\u8D5B\uFF0C\u8C01\u5148\u6709\u7ED3\u679C\uFF0C\u5373\u4E3A\u6700\u7EC8\u7ED3\u679C</p><p>\u6D4B\u8BD5\u6548\u679C\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// p2 \u5148\u6709\u7ED3\u679C</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p2 reject&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

MyPromise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: p2 reject</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

MyPromise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre></div><h2 id="any" tabindex="-1"><a class="header-anchor" href="#any" aria-hidden="true">#</a> any</h2><p>ES12 \u65B0\u589E any\uFF0C\u7B49\u5F85\u7B2C\u4E00\u4E2A\u6210\u529F\u72B6\u6001</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u591A\u4E2APromise</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p1 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p2 reject&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;p3 resolve&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token comment">// res: p1 resolve</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>errors<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><p>\u5982\u679C\u6240\u6709 Promise \u5BF9\u8C61\u5747\u4E3A\u5931\u8D25\u72B6\u6001\uFF0C\u5219\u62A5 AggregateError \u7684\u9519\u8BEF\u3002\u53EF\u901A\u8FC7 .errors \u53D6\u5F97\u6240\u6709\u5931\u8D25\u7ED3\u679C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u591A\u4E2APromise</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p1 reject&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p2 reject&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;p3 reject&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token comment">// err: AggregateError: All promises were rejected</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>errors<span class="token punctuation">)</span> <span class="token comment">// err: [&#39;p1 reject&#39;, &#39;p2 reject&#39;, &#39;p3 reject&#39;]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre></div><h2 id="promise-\u52A0\u8F7D\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#promise-\u52A0\u8F7D\u56FE\u7247" aria-hidden="true">#</a> Promise \u52A0\u8F7D\u56FE\u7247</h2>`,87),y={href:"http://js.jirengu.com/moxobomemu/1/edit?js,console,output",target:"_blank",rel:"noopener noreferrer"},P=s("\u5728\u7EBF\u9884\u89C8"),b=t(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadImg</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> src
    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    img<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u52A0\u8F7D\u5730\u5740\u4E3A </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u7684\u56FE\u7247\u5931\u8D25</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> url1 <span class="token operator">=</span>
  <span class="token string">&#39;https://p6-passport.byteacctimg.com/img/user-avatar/c2ff47a1390407c1a16b5e5fc3aa5e1f~300x300.image&#39;</span>
<span class="token keyword">const</span> url2 <span class="token operator">=</span>
  <span class="token string">&#39;https://avatars.githubusercontent.com/u/39004291?s=400&amp;u=eb0d02f850acaf334bdb14611a7d6d2e50591c57&amp;v=4&#39;</span>

<span class="token function">loadImg</span><span class="token punctuation">(</span>url1<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">img1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>img1<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">loadImg</span><span class="token punctuation">(</span>url2<span class="token punctuation">)</span> <span class="token comment">// promise \u5B9E\u4F8B</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">img2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>img2<span class="token punctuation">)</span>
    <span class="token keyword">return</span> img2 <span class="token comment">// \u666E\u901A\u5BF9\u8C61</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">img2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>img2<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#\u7EC3\u4E60" aria-hidden="true">#</a> \u7EC3\u4E60</h2><p>then\u3001catch \u6539\u53D8 Promise \u7684\u72B6\u6001</p><p>\u9898\u76EE\u4E00\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1 3</span>
</code></pre></div><p>\u9898\u76EE\u4E8C\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u6613\u9519</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u6210\u529F\u8FDB\u5165 then</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u62A5\u9519\u5219\u5931\u8D25</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>   <span class="token comment">// \u5931\u8D25\u5219\u8FDB\u5165 catch</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// \u65E0\u62A5\u9519\u5219\u6210\u529F</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>   <span class="token comment">// \u6210\u529F\u5219\u8FDB\u5165 then</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1 2 3</span>
</code></pre></div><p>\u9898\u76EE\u4E09\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u6210\u529F\u8FDB\u5165 then</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u62A5\u9519\u5219\u5931\u8D25</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>   <span class="token comment">// \u5931\u8D25\u5219\u8FDB\u5165 catch</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">// \u65E0\u62A5\u9519\u5219\u6210\u529F</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1 2</span>
</code></pre></div>`,9);function x(_,T){const a=u("ExternalLinkIcon");return c(),e("div",null,[k,i,r,m,g,d,f,n("p",null,[n("a",h,[v,p(a)]),j]),w,n("p",null,[n("a",y,[P,p(a)])]),b])}const C=o(l,[["render",x],["__file","promise.html.vue"]]);export{C as default};
