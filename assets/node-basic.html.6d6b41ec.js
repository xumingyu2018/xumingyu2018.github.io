import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.36443286.js";const e={},p=t(`<h2 id="\u5185\u7F6E\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u6A21\u5757" aria-hidden="true">#</a> \u5185\u7F6E\u6A21\u5757</h2><h3 id="fs\u6A21\u5757-\u6587\u4EF6\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#fs\u6A21\u5757-\u6587\u4EF6\u7CFB\u7EDF" aria-hidden="true">#</a> <code>fs\u6A21\u5757(\u6587\u4EF6\u7CFB\u7EDF):</code></h3><p><strong>\u5BFC\u5165</strong> <code>const fs = require(&#39;fs&#39;)</code></p><p><strong>\u6587\u4EF6\u8BFB\u53D6\uFF1A</strong></p><ul><li>\u540C\u6B65\u8BFB\u53D6\uFF1A<code>fs.readFileSync(&#39;\u6587\u4EF6\u540D&#39;, { \u53EF\u914D\u7F6E\u9879 })</code></li><li>\u5F02\u6B65\u56DE\u8C03\u8BFB\u53D6\uFF1A<code>fs.readFile(&#39;\u6587\u4EF6\u540D&#39;, { \u53EF\u914D\u7F6E\u9879 }, (err, data) \u21D2 { ... })</code></li><li>\u5F02\u6B65 Promise \u8BFB\u53D6\uFF1A<code>fs.promises.readFile(&#39;\u6587\u4EF6\u540D&#39;, {\u53EF\u914D\u7F6E\u9879}).then(res \u21D2 {})</code></li></ul><p><strong>\u6587\u4EF6\u5199\u5165\uFF1A</strong></p><ul><li><p><code>fs.writeFile(&#39;\u6587\u4EF6\u540D&#39;\uFF0C content, { [ encoding, flag ] }, () \u21D2 { ... } )</code></p><p><code>flag\u5C5E\u6027</code></p><ul><li>&#39;w&#39; \u6253\u5F00\u6587\u4EF6\u5199\u5165\uFF0C\u9ED8\u8BA4\u503C</li><li>&#39;w+&#39; \u6253\u5F00\u6587\u4EF6\u8FDB\u884C\u8BFB\u5199\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6</li><li>&#39;a&#39; \u8FFD\u52A0\u6587\u4EF6, \u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728, \u5219\u521B\u5EFA\u6587\u4EF6, \u5982\u679C\u6587\u4EF6\u5B58\u5728, \u5219\u5728\u6587\u4EF6\u5185\u5BB9\u540E\u9762\u8FFD\u52A0\u5185\u5BB9</li><li>&#39;a+&#39; \u6253\u5F00\u6587\u4EF6\u8FDB\u884C\u8BFB\u5199\uFF0C\u5C06\u6D41\u653E\u5728\u6587\u4EF6\u672B\u5C3E\uFF0C\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u6587\u4EF6</li><li>&#39;r&#39; \u6253\u5F00\u6587\u4EF6\u8BFB\u53D6\uFF0C\u8BFB\u53D6\u65F6\u7684\u9ED8\u8BA4\u503C</li><li>&#39;r+&#39; \u6253\u5F00\u6587\u4EF6\u8FDB\u884C\u8BFB\u5199\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u90A3\u4E48\u629B\u51FA\u5F02\u5E38</li></ul></li></ul><p><strong>\u5176\u5B83\u5E38\u7528 api\uFF1A</strong></p><ul><li>\u6253\u5F00\u6587\u4EF6\uFF1A<code>fs.open(&#39;\u6587\u4EF6\u540D&#39;, (err, fd) \u21D2 { ... })</code>\uFF08fd\uFF1A\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF09</li><li>\u8BFB\u53D6\u6587\u4EF6\u4FE1\u606F\uFF1A<code>fs.fstat(fd, (err, stats) \u21D2 { ... })</code></li><li>\u5173\u95ED\u6587\u4EF6\uFF1A<code>fs.close(fd)</code></li><li>\u6587\u4EF6\u5939\u521B\u5EFA\uFF1A<code>fs.mkdir(&#39;\u9700\u521B\u5EFA\u7684\u6587\u4EF6\u540D&#39;, () \u21D2 { ... })</code>\uFF08webpack \u7684 dist \u6253\u5305\u64CD\u4F5C\uFF09</li><li>\u6587\u4EF6\u5939\u91CD\u547D\u540D\uFF1A<code>fs.rename(&#39;\u91CD\u547D\u540D\u6587\u4EF6&#39;, &#39;\u88AB\u91CD\u547D\u540D\u6587\u4EF6&#39;, () \u21D2 { ... })</code></li><li>\u6587\u4EF6\u5939\u8BFB\u53D6\uFF1A<code>fs.readdir(&#39;\u6587\u4EF6\u540D&#39;, { withFileTypes: true }, (err, files) =&gt; { ... })</code><ul><li><code>withFileTypes</code>\uFF1A\u83B7\u53D6\u6587\u4EF6\u5939\u4E2D\u7684\u6587\u4EF6\u4FE1\u606F</li><li>\u9012\u5F52\u8BFB\u53D6\u6587\u4EF6\u5939\u4E2D\u7684\u6587\u4EF6\uFF1A</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span><span class="token string">&#39;./hello&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">withFileTypes</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;\u662F\u6587\u4EF6\u5939&#39;</span><span class="token punctuation">)</span>

      <span class="token comment">// \u9012\u5F52\u8BFB\u53D6\u6587\u4EF6\u5939\u4E2D\u7684\u6587\u4EF6</span>
      fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span><span class="token string">&#39;./hello/&#39;</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">withFileTypes</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;\u662F\u6587\u4EF6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5C01\u88C5\u9012\u5F52\u7684\u8BFB\u53D6\u6587\u4EF6\u5939\u4E2D\u6240\u6709\u7684\u6587\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">readDirectory</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">withFileTypes</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>isDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">readDirectory</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6\u5230\u6587\u4EF6\uFF1A&quot;</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">readDirectory</span><span class="token punctuation">(</span><span class="token string">&#39;./hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="events\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#events\u6A21\u5757" aria-hidden="true">#</a> <code>events\u6A21\u5757</code></h3><p><strong>\u5BFC\u5165\u7C7B\uFF1A</strong><code>const EventEmitter = require(&#39;events&#39;)</code></p><p><strong>\u57FA\u672C\u4F7F\u7528\uFF1A</strong></p><ul><li>\u83B7\u53D6 EventEmitter \u5BF9\u8C61\uFF1A<code>const emitter = new EventEmitter()</code></li><li>\u76D1\u542C\u4E8B\u4EF6\uFF1A<code>emitter.on(&#39;test&#39;, (...args?) =&gt; { ... })</code></li><li>\u53D1\u5C04\u4E8B\u4EF6\uFF1A<code>emitter.emit(&#39;test&#39;, ...args?)</code></li><li>\u53D6\u6D88\u4E8B\u4EF6\uFF1A<code>emitter.off(&#39;test&#39;, \u56DE\u8C03\u51FD\u6570)</code></li></ul><p><strong>\u5176\u4ED6 api\uFF1A</strong></p><ul><li>\u83B7\u53D6\u6240\u6709\u76D1\u542C\u4E8B\u4EF6\u7684\u540D\u79F0\uFF1A<code>emitter.eventNames()</code></li><li>\u83B7\u53D6\u76D1\u542C\u6700\u5927\u7684\u76D1\u542C\u4E2A\u6570\uFF1A<code>emitter.getMaxListeners()</code></li><li>\u83B7\u53D6\u67D0\u4E00\u4E2A\u4E8B\u4EF6\u540D\u79F0\u5BF9\u5E94\u7684\u76D1\u542C\u5668\u4E2A\u6570\uFF1A<code>emitter.listenerCount(&quot;test&quot;)</code></li><li>\u83B7\u53D6\u67D0\u4E00\u4E2A\u4E8B\u4EF6\u540D\u79F0\u5BF9\u5E94\u7684\u76D1\u542C\u5668\u51FD\u6570\uFF08\u6570\u7EC4\uFF09\uFF1A<code>emitter.listeners(&quot;test&quot;)</code></li><li>\u4E8B\u4EF6\u76D1\u542C\u53EA\u76D1\u542C\u7B2C\u4E00\u6B21\u53D1\u5C04\u7684\u4E8B\u4EF6\uFF1A<code>emitter.once(&#39;test&#39;, () \u21D2 { ... })</code></li><li>\u5C06\u4E8B\u4EF6\u76D1\u542C\u6DFB\u52A0\u5230\u6700\u524D\u9762\u4F18\u5148\u76D1\u542C\uFF1A<code>emitter.prependListener(&#39;test&#39;, () =&gt;{ ... })</code></li><li>\u5C06\u4E8B\u4EF6\u76D1\u542C\u6DFB\u52A0\u5230\u6700\u524D\u9762\u4E14\u53EA\u76D1\u542C\u7B2C\u4E00\u6B21\u53D1\u5C04\u7684\u4E8B\u4EF6\uFF1A<code>emitter.prependOnceListener(&#39;test&#39;, () =&gt;{ ... })</code></li><li>\u79FB\u9664\u6240\u6709\u7684\u4E8B\u4EF6\u76D1\u542C\u6216\u6307\u5B9A\u4E8B\u4EF6\u76D1\u542C\uFF1A<code>emitter.removeAllListeners(&#39;test&#39;)</code></li></ul><h3 id="buffer\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#buffer\u6A21\u5757" aria-hidden="true">#</a> <code>Buffer\u6A21\u5757</code></h3><p>Buffer \u4FDD\u5B58 8 \u4F4D\u4E8C\u8FDB\u5236\u6570\u636E\uFF1A0000 0000\uFF0C8 \u4F4D\u4E3A\u4E00\u4E2A\u5355\u5143\u5373\u4E00\u4E2A\u5B57\u8282\uFF0C\u5176\u4E2D\u4E2D\u6587\u5305\u542B 3 \u4E2A\u5B57\u8282\u3002</p><p>\u521B\u5EFA Buffer\uFF1A</p><pre><code>\u65B9\u5F0F\u4E00\uFF1A\`Buffer.from(&#39;\u4F60\u597D&#39;, &#39;utf8&#39;? &#39;utf16le&#39;?)\`

\u65B9\u5F0F\u4E8C\uFF1A\`Buffer.alloc(8)\`\uFF08\u7533\u8BF7\u4E00\u4E2A8\u4E2A\u5B57\u8282\u5927\u5C0F\u7684Buffer\u5185\u5B58\u7A7A\u95F4\uFF09
  - \u64CD\u4F5C\uFF1A
      - \`buf[0] = 100\`
      - \`buf.toString()\`\u89E3\u6790
      - \`buf[1] = &#39;m&#39;.charCodeAt()\`\u7B49
</code></pre><p>\u6027\u80FD\u4F18\u5316\uFF1A\u4EE5\u4E0B Buffer \u6E90\u7801\u89E3\u6790\u3002</p><h3 id="stream\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#stream\u6A21\u5757" aria-hidden="true">#</a> <code>Stream\u6A21\u5757</code></h3><p>\u6240\u6709\u6D41\u90FD\u662F EventEmitter \u5B9E\u4F8B\uFF08\u5373\u7EE7\u627F<code>EventEmitter</code>\uFF0C\u53EF\u5B9E\u73B0\u76D1\u542C\u7B49\u529F\u80FD\uFF09\uFF0C\u8FC7\u6D41\u8BFB\u53D6\u6587\u4EF6\u53EF\u4EE5\u7CBE\u51C6\u63A7\u5236\u8BFB\u53D6\u7684\u4F4D\u7F6E\u3002</p><p>\u56DB\u79CD\u57FA\u672C\u6D41\u7C7B\u578B\uFF1A</p><ul><li><p><code>Writable</code>\uFF1A\u5199\u5165\u6570\u636E\u6D41\uFF08<code>fs.createWriteStream()</code>\uFF09</p><p>\u5199\u5165\u6D41\u4E0D\u80FD\u76D1\u542C\u5230 close \u4E8B\u4EF6\u3002\u56E0\u4E3A\u5B83\u6253\u5F00\u540E\u662F\u4E0D\u4F1A\u81EA\u52A8\u5173\u95ED\uFF0C\u5FC5\u987B\u624B\u52A8\u5173\u95ED\u6765\u544A\u8BC9 Node \u5DF2\u7ECF\u5199\u5165\u7ED3\u675F\uFF0C\u5E76\u4E14\u4F1A\u53D1\u51FA\u4E00\u4E2A finish \u4E8B\u4EF6\u3002</p><ul><li><p><code>fs.createWriteStream(path, options?)</code></p><p><code>options</code>\u53C2\u6570\uFF1A</p><ul><li><code>encoding</code></li><li><code>flag</code></li><li><code>start</code></li></ul></li><li><p><code>writeStream.on(&#39;open&#39;, (fd) \u21D2 {})</code></p></li><li><p><code>writeStream.on(&#39;finish&#39;, () =&gt; {})</code></p></li><li><p><code>writeStream.on(&#39;close&#39;, (err) =&gt; {))</code>\u9700\u8981\u624B\u52A8\u5173\u95ED<code>writeStream.close()</code></p></li></ul></li><li><p><code>Readable</code>\uFF1A\u8BFB\u53D6\u6570\u636E\u6D41</p><ul><li><p><code>fs.createReadStream(path, options?)</code></p><p><code>options</code>\u53C2\u6570\uFF1A</p><ul><li><code>start</code>\uFF1A\u4ECE\u4EC0\u4E48\u4F4D\u7F6E\u5F00\u59CB\u8BFB\u53D6</li><li><code>end</code>\uFF1A\u8BFB\u53D6\u5230\u4EC0\u4E48\u4F4D\u7F6E\u7ED3\u675F\uFF08\u5305\u62EC end \u4F4D\u7F6E\u5B57\u8282\uFF09</li><li><code>highWaterMark</code>\uFF1A\u6BCF n \u4E2A\u5B57\u8282\u8BFB\u53D6\u4E00\u6B21</li></ul></li><li><p><code>readStream.on(&#39;data&#39;, () \u21D2 { ... })</code>\uFF1A\u76D1\u542C\u6D41\u7684 data \u4E8B\u4EF6</p></li><li><p><code>readStream.pause()</code>\uFF1A\u6682\u505C\u6D41\u7684\u8BFB\u53D6</p></li><li><p><code>readStream.resume()</code>\uFF1A\u6062\u590D\u6D41\u7684\u8BFB\u53D6</p></li><li><p><code>readStream.pipe(writeStream)</code>\uFF1A<strong>\u53EF\u8BFB\u53EF\u5199\u6D41\u8FDE\u63A5\uFF08\u53EF\u5B9E\u73B0\u6587\u4EF6\u7684\u62F7\u8D1D\uFF09</strong></p></li></ul></li><li><p><code>Duplex</code>\uFF1A\u540C\u65F6\u4E3A Writable \u548C Readable\uFF08<code>net.Socket</code>\uFF09</p></li><li><p><code>Transform</code>\uFF1ADuplex \u53EF\u4EE5\u5728\u5199\u5165\u548C\u8BFB\u53D6\u662F\u4FEE\u6539\u6216\u8F6C\u6362\u6570\u636E\u6D41\uFF08<code>zlib.createDeflate()</code>\u538B\u7F29\uFF09</p></li></ul><h3 id="http\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#http\u6A21\u5757" aria-hidden="true">#</a> <code>http\u6A21\u5757</code></h3><h3 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h3><ol><li>\u521B\u5EFA\u4E00\u4E2A\u6216\u591A\u4E2A http \u670D\u52A1\u5668</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> server1 <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> respond</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// respond\u5BF9\u8C61\u53EF\u4EE5\u7528\u6765\u7ED9\u8BF7\u6C42\u7684\u5BA2\u6237\u7AEF\u8FD4\u56DE\u54CD\u5E94</span>
  respond<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5F00\u542F\u5BF9\u5E94\u7684\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u544A\u77E5\u9700\u8981\u76D1\u542C\u7684\u7AEF\u53E3</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u76D1\u542C\u7AEF\u53E3\u65F6\uFF0C\u76D1\u542C1024\u4EE5\u4E0A\u7684\u7AEF\u53E3\uFF0C65535\u4EE5\u4E0B\u7684\u7AEF\u53E3</span>
server1<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A readable \u8BFB\u6D41\uFF0C\u53EF\u4EE5\u76D1\u542C data \u4E8B\u4EF6\u3002</p><h4 id="request-\u5E38\u7528\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#request-\u5E38\u7528\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> request \u5E38\u7528\u5BF9\u8C61\u5C5E\u6027</h4><ul><li><code>req.url</code></li><li><code>req.method</code>\uFF1AGET\u3001POST\u3001PUT\u3001DELET \u7B49\u3002</li><li><code>req.headers</code>\uFF1A[&#39;content-type&#39;]\u3001[&#39;authorization&#39;]\u7B49\u3002</li></ul><h4 id="\u5904\u7406\u4E0D\u540C-url\u3001\u4E0D\u540C-method" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u4E0D\u540C-url\u3001\u4E0D\u540C-method" aria-hidden="true">#</a> \u5904\u7406\u4E0D\u540C url\u3001\u4E0D\u540C method</h4><p>\u5BF9\u4E8E\u6BCF\u4E2A url \u548C method \u90FD\u8981\u5206\u60C5\u51B5\u5904\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 1.\u521B\u5EFA\u4E00\u4E2Ahttp\u670D\u52A1\u5668</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url
  <span class="token keyword">const</span> method <span class="token operator">=</span> req<span class="token punctuation">.</span>method

  <span class="token keyword">if</span><span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u9875&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u767B\u5F55\u6210\u529F\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u652F\u6301\u7684\u8BF7\u6C42\u65B9\u5F0F,\u8BF7\u4F7F\u7528\u6B63\u786E\u7684\u8BF7\u6C42\u65B9\u5F0F&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>url <span class="token operator">===</span> <span class="token string">&quot;/register&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CE8\u518C\u6210\u529F\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 2.\u5F00\u542Fserver\u670D\u52A1\u5668</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="request-\u53C2\u6570\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#request-\u53C2\u6570\u89E3\u6790" aria-hidden="true">#</a> request \u53C2\u6570\u89E3\u6790</h4><ul><li>\u5904\u7406 query \u7C7B\u578B\u53C2\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> qs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;querystring&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u89E3\u6790url\uFF08\u5982\uFF1A/home/list?offset=100&amp;size=20\uFF09</span>
<span class="token keyword">const</span> urlString <span class="token operator">=</span> req<span class="token punctuation">.</span>url
<span class="token keyword">const</span> urlInfo <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>urlString<span class="token punctuation">)</span>

<span class="token comment">// \u89E3\u6790query\u53C2\u6570</span>
<span class="token keyword">const</span> queryString <span class="token operator">=</span> urlInfo<span class="token punctuation">.</span>query <span class="token comment">// queryString: offset=100&amp;size=20</span>
<span class="token keyword">const</span> queryInfo <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>queryString<span class="token punctuation">)</span> <span class="token comment">// { offset:&#39;100&#39;, size: &#39;20&#39; }</span>

<span class="token comment">// \u4E5F\u53EF\u901A\u8FC7new URLSearchParams()\u89E3\u6790</span>
<span class="token keyword">const</span> queryInfo2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>queryString<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5904\u7406 body \u7C7B\u578B\u53C2\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>req<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8BBE\u7F6E\u7F16\u7801\u683C\u5F0F\uFF0C\u5426\u5219data\u662FBuffer\u7C7B\u578B</span>
<span class="token comment">// \u7B80\u5355\u7684\u767B\u5F55\u6848\u4F8B</span>
<span class="token keyword">let</span> isLogin <span class="token operator">=</span> <span class="token boolean">false</span>
req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// body\u91CC\u9762\u7684\u53C2\u6570\u5728\u76D1\u542C\u7684data\u91CC\u9762</span>
  <span class="token keyword">const</span> dataString <span class="token operator">=</span> data
  <span class="token keyword">const</span> loginInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dataString<span class="token punctuation">)</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span>loginInfo<span class="token punctuation">.</span>username <span class="token operator">===</span><span class="token string">&#39;never&#39;</span> <span class="token operator">&amp;&amp;</span> loginInfo<span class="token punctuation">.</span>password <span class="token operator">===</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isLogin <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
    isLogin <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>isLogin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u767B\u5F55\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u767B\u5F55\u5931\u8D25,\u8BF7\u91CD\u65B0\u767B\u5F55&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h3><p>response \u5BF9\u8C61\u672C\u8D28\u4E0A\u662F Writable \u53EF\u5199\u6D41</p><h4 id="response-\u54CD\u5E94\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#response-\u54CD\u5E94\u65B9\u5F0F" aria-hidden="true">#</a> response \u54CD\u5E94\u65B9\u5F0F</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// 1.\u54CD\u5E94\u6570\u636E\u65B9\u5F0F\u4E00\uFF1Awrite\uFF08\u6CA1\u6709\u5173\u95ED\u6D41\uFF09</span>
  res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;hhhhhhhh&quot;</span><span class="token punctuation">)</span>
  res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>

  <span class="token comment">// 2.\u54CD\u5E94\u6570\u636E\u65B9\u5F0F\u4E8C\uFF1Aend\uFF08\u5199\u51FA\u540E\u4F1A\u5173\u95ED\u6D41\uFF09</span>
  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u672C\u6B21\u5199\u51FA\u7ED3\u675F&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="response-\u54CD\u5E94\u72B6\u6001\u7801" tabindex="-1"><a class="header-anchor" href="#response-\u54CD\u5E94\u72B6\u6001\u7801" aria-hidden="true">#</a> response \u54CD\u5E94\u72B6\u6001\u7801</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// \u54CD\u5E94\u72B6\u6001\u7801\u65B9\u5F0F\u4E00\uFF1AstatusCode</span>
  res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">201</span>

  <span class="token comment">// \u54CD\u5E94\u72B6\u6001\u7801\u65B9\u5F0F\u4E8C\uFF1AwriteHead</span>
  res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="response-\u54CD\u5E94-header" tabindex="-1"><a class="header-anchor" href="#response-\u54CD\u5E94-header" aria-hidden="true">#</a> response \u54CD\u5E94 header</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// 1.\u5355\u72EC\u8BBE\u7F6E\u4E00\u4E2Aheader</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json;charset=utf-8&quot;</span><span class="token punctuation">)</span>

  <span class="token comment">// 2.\u548Chttp status code\u4E00\u8D77\u8BBE\u7F6E</span>
  res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json;charset=utf-8&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D1\u9001-get-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001-get-\u8BF7\u6C42" aria-hidden="true">#</a> \u53D1\u9001 Get \u8BF7\u6C42</h3><p>axios \u5E95\u5C42\u539F\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.\u4F7F\u7528http\u6A21\u5757\u53D1\u9001get\u8BF7\u6C42</span>
http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:8000&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dataString <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> dataInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dataString<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataInfo<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D1\u9001-post-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001-post-\u8BF7\u6C42" aria-hidden="true">#</a> \u53D1\u9001 POST \u8BF7\u6C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 2.\u4F7F\u7528http\u6A21\u5757\u53D1\u9001post\u8BF7\u6C42</span>
<span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8000</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dataString <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> dataInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dataString<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5FC5\u987B\u8C03\u7528end\uFF0C\u8868\u793A\u5199\u5165\u5185\u5BB9\u5B8C\u6210</span>
req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6587\u4EF6\u4E0A\u4F20-\u670D\u52A1\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u4E0A\u4F20-\u670D\u52A1\u7AEF" aria-hidden="true">#</a> \u6587\u4EF6\u4E0A\u4F20\uFF08\u670D\u52A1\u7AEF\uFF09</h3><p>\u57FA\u4E8E Node http \u7684\u539F\u751F\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u6587\u4EF6\uFF08\u56FE\u7247\uFF09\u4E0A\u4F20\u539F\u751F\u5B9E\u73B0</span>

<span class="token comment">// 1.\u521B\u5EFA\u4E00\u4E2Ahttp\u670D\u52A1\u5668</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  req<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;binary&quot;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u83B7\u53D6boundary\u503C\uFF08boundary = -------21321321312--------\uFF09</span>
  <span class="token keyword">const</span> boundary <span class="token operator">=</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;boundary=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

  <span class="token comment">// \u5C06\u56FE\u7247\u4E8C\u8FDB\u5236\u6570\u636E\u5168\u90E8\u5B58\u5165\u53D8\u91CF\u4E2D\uFF08\u56FE\u7247\u8D8A\u5927\u8C03\u7528req.on(&#39;data&#39;)\u8BF7\u6C42\u8D8A\u591A\uFF09</span>
  <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token comment">// \u8BB0\u5F55\u6587\u4EF6\u4E0A\u4F20\u8FDB\u5EA6</span>
  <span class="token keyword">const</span> fileSize <span class="token operator">=</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-length&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> curSize <span class="token operator">=</span> <span class="token number">0</span>

  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    curSize <span class="token operator">+=</span> data<span class="token punctuation">.</span>length
    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5F53\u524D\u4E0A\u4F20\u8FDB\u5EA6\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">(</span>curSize <span class="token operator">/</span> fileSize <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

    formData <span class="token operator">+=</span> data
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// \u624B\u52A8\u89E3\u6790\u56FE\u7247\u4E8C\u8FDB\u5236\u6587\u4EF6 \uFF081.\u622A\u53D6\u56FE\u7247\u7C7B\u578B 2.\u53BB\u6389\u7A7A\u683C 3.\u53BB\u6389\u6700\u540E\u7684boundary 4.\u5C06\u56FE\u7247\u6570\u636E\u5B58\u50A8\u5230\u6587\u4EF6\u4E2D\uFF09</span>
  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">const</span> imageType <span class="token operator">=</span> <span class="token string">&#39;image/jpeg&#39;</span>
    <span class="token comment">// 1.\u622A\u53D6\u4ECEimage/jpeg\u4F4D\u7F6E\u5F00\u59CB\u7684\u540E\u9762\u6240\u6709\u6570\u636E</span>
    <span class="token keyword">const</span> imageTypePosition <span class="token operator">=</span> formData<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> imageType<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">4</span> <span class="token comment">// +4\u662F\u4E3A\u4E86\u53BB\u6389\\r\\n\\r\\n 2\u4E2A\u7A7A\u683C</span>
    <span class="token keyword">let</span> imageData <span class="token operator">=</span> formData<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>imageTypePosition<span class="token punctuation">)</span>

    <span class="token comment">// 2.imageData\u5F00\u59CB\u4F4D\u7F6E\u4F1A\u67092\u4E2A\u7A7A\u683C</span>
    <span class="token comment">// imageData = imageData.replace(/^\\s\\s*/, &#39;&#39;)</span>

    <span class="token comment">// 3.\u66FF\u6362\u6700\u540E\u7684boundary</span>
    imageData <span class="token operator">=</span> imageData<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> imageData<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">--</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>boundary<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">--</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 4.\u5C06imageData\u7684\u6570\u636E\u5B58\u50A8\u5230\u6587\u4EF6\u4E2D</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./image.png&#39;</span><span class="token punctuation">,</span> imageData<span class="token punctuation">,</span> <span class="token string">&#39;binary&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6587\u4EF6\u5B58\u50A8\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;\u6587\u4EF6\u4E0A\u4F20\u5B8C\u6210&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 2.\u5F00\u542Fserver\u670D\u52A1\u5668</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6587\u4EF6\u4E0A\u4F20-\u5BA2\u6237\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u4E0A\u4F20-\u5BA2\u6237\u7AEF" aria-hidden="true">#</a> \u6587\u4EF6\u4E0A\u4F20\uFF08\u5BA2\u6237\u7AEF\uFF09</h3><p>\u6D4F\u89C8\u5668\u4EE3\u7801</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- \u7528js\u5B9E\u73B0\u8868\u5355\u6587\u4EF6\u4E0A\u4F20\uFF08\u4E0D\u7528&lt;form&gt;&lt;/form&gt;\uFF09 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> btnEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>
    btnEl<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1.\u521B\u5EFA\u8868\u5355\u5BF9\u8C61</span>
      <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token comment">// 2.\u5C06input\u4E2D\u7684\u6587\u4EF6\u5BF9\u8C61\u6DFB\u52A0\u5230\u8868\u5355\u5BF9\u8C61\u4E2D</span>
      <span class="token keyword">const</span> file <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      formData<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;photo&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>

      <span class="token comment">// 3.\u53D1\u751Fpost\u8BF7\u6C42\uFF0C\u5C06\u8868\u5355\u6570\u636E\u53D1\u9001\u5230\u670D\u52A1\u5668\uFF08axios\uFF09</span>
      <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8000/upload&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;multipart/form-data&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="node-\u6027\u80FD\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#node-\u6027\u80FD\u4F18\u5316" aria-hidden="true">#</a> Node \u6027\u80FD\u4F18\u5316</h2><p>\u521B\u5EFA Buffer \u6027\u80FD\u4F18\u5316\uFF1A\u5F53<code>alloc</code>\u5185\u5B58\u65F6\uFF0C\u4F1A\u7533\u8BF7 8kb \u66F4\u591A\u7684\u7A7A\u95F4\uFF1B\u901A\u8FC7<code>fromStringFast</code>\u662F\u5426\u8FD8\u9700\u8981\u521B\u5EFA\u65B0\u7684\u7A7A\u95F4\u3002\uFF08node/lib/buffer.js\uFF1A428 \u884C\uFF09</p><p><img src="https://secure2.wostatic.cn/static/qKY1x5roXeK46UwVrcSGwR/image.png?auth_key=1690639102-2xNLSawSeRF1cV4oJWzNwS-0-4293b3abcb51810aac5e00bc31945c9f" alt=""></p><p><img src="https://secure2.wostatic.cn/static/o5GHvWdUnGerDc9LQNcuLV/image.png?auth_key=1690639102-jAHrVXhzHxT65wPTRL8aYV-0-bced994b227388a47eef3cb95d79879a" alt=""></p><p>\u83B7\u53D6\u6587\u4EF6\u5939\u4E2D\u7684\u6587\u4EF6\u4FE1\u606F</p><ol><li><code>http</code>\uFF1A\u7528\u4E8E\u521B\u5EFA HTTP \u670D\u52A1\u5668\u548C\u5BA2\u6237\u7AEF\u7684\u6A21\u5757\u3002</li><li><code>fs</code>\uFF1A\u7528\u4E8E\u8BFB\u53D6\u548C\u5199\u5165\u6587\u4EF6\u7684\u6A21\u5757\u3002</li><li><code>path</code>\uFF1A\u7528\u4E8E\u5904\u7406\u6587\u4EF6\u548C\u76EE\u5F55\u8DEF\u5F84\u7684\u6A21\u5757\u3002</li><li><code>os</code>\uFF1A\u63D0\u4F9B\u6709\u5173\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4FE1\u606F\u548C\u65B9\u6CD5\u7684\u6A21\u5757\u3002</li><li><code>util</code>\uFF1A\u63D0\u4F9B\u4E86\u4E00\u4E9B\u6709\u7528\u7684\u529F\u80FD\uFF0C\u5982\u7EE7\u627F\u548C\u9519\u8BEF\u5904\u7406\u3002</li><li><code>crypto</code>\uFF1A\u63D0\u4F9B\u52A0\u5BC6\u548C\u89E3\u5BC6\u7684\u529F\u80FD\u7684\u6A21\u5757\u3002</li><li><code>net</code>\uFF1A\u63D0\u4F9B\u4E86\u4E00\u4E9B\u57FA\u672C\u7684\u7F51\u7EDC\u529F\u80FD\uFF0C\u5982\u521B\u5EFA TCP \u670D\u52A1\u5668\u548C\u5BA2\u6237\u7AEF\u3002</li><li><code>events</code>\uFF1A\u63D0\u4F9B\u4E8B\u4EF6\u9A71\u52A8\u7684\u529F\u80FD\u7684\u6A21\u5757\u3002</li><li><code>stream</code>\uFF1A\u63D0\u4F9B\u4E86\u6D41\u5F0F\u6570\u636E\u7684\u529F\u80FD\u7684\u6A21\u5757\u3002</li><li><code>process</code>\uFF1A\u63D0\u4F9B\u6709\u5173 Node.js \u8FDB\u7A0B\u7684\u4FE1\u606F\u548C\u65B9\u6CD5\u7684\u6A21\u5757\u3002</li><li><code>querystring</code>\uFF1A\u63D0\u4F9B\u4E86\u4E00\u4E9B\u89E3\u6790\u548C\u5E8F\u5217\u5316 URL \u67E5\u8BE2\u5B57\u7B26\u4E32\u7684\u529F\u80FD\u7684\u6A21\u5757\u3002</li><li><code>url</code>\uFF1A\u63D0\u4F9B\u4E86\u4E00\u4E9B\u89E3\u6790\u548C\u683C\u5F0F\u5316 URL \u7684\u529F\u80FD\u7684\u6A21\u5757\u3002</li></ol><p>\u5199\u5165\u6D41\u4E0D\u80FD\u76D1\u542C\u5230 close \u4E8B\u4EF6\u3002\u56E0\u4E3A\u5B83\u6253\u5F00\u540E\u662F\u4E0D\u4F1A\u81EA\u52A8\u5173\u95ED\uFF0C\u5FC5\u987B\u624B\u52A8\u5173\u95ED\u6765\u544A\u8BC9 Node \u5DF2\u7ECF\u5199\u5165\u7ED3\u675F\uFF0C\u5E76\u4E14\u4F1A\u53D1\u51FA\u4E00\u4E2A finish \u4E8B\u4EF6</p><p>const http = require(&#39;http&#39;)</p><p>const fs = require(&#39;fs&#39;)</p><p>// \u6587\u4EF6\uFF08\u56FE\u7247\uFF09\u4E0A\u4F20\u539F\u751F\u5B9E\u73B0</p><p>// 1.\u521B\u5EFA\u4E00\u4E2A http \u670D\u52A1\u5668</p><p>const server = http.createServer((req, res) =&gt;{</p><p>req.setEncoding(&quot;binary&quot;)</p><p>// \u83B7\u53D6 boundary \u503C\uFF08boundary = -------21321321312--------\uFF09</p><p>const boundary = req.headers[&#39;content-type&#39;].split(&#39;; &#39;)[1].split(&#39;boundary=&#39;)[1]</p><p>// \u5C06\u56FE\u7247\u4E8C\u8FDB\u5236\u6570\u636E\u5168\u90E8\u5B58\u5165\u53D8\u91CF\u4E2D\uFF08\u56FE\u7247\u8D8A\u5927\u8C03\u7528 req.on(&#39;data&#39;)\u8BF7\u6C42\u8D8A\u591A\uFF09</p><p>let formData = &#39;&#39;</p><p>// \u8BB0\u5F55\u6587\u4EF6\u4E0A\u4F20\u8FDB\u5EA6</p><p>const fileSize = req.headers[&#39;content-length&#39;]</p><p>let curSize = 0</p><p>req.on(&#39;data&#39;, (data) =&gt; {</p><pre><code>curSize += data.length

res.write(\`\u5F53\u524D\u4E0A\u4F20\u8FDB\u5EA6\uFF1A\${(curSize / fileSize * 100) | 0}%\\n\`)

formData += data
</code></pre><p>})</p><p>// \u624B\u52A8\u89E3\u6790\u56FE\u7247\u4E8C\u8FDB\u5236\u6587\u4EF6 \uFF081.\u622A\u53D6\u56FE\u7247\u7C7B\u578B 2.\u53BB\u6389\u7A7A\u683C 3.\u53BB\u6389\u6700\u540E\u7684 boundary 4.\u5C06\u56FE\u7247\u6570\u636E\u5B58\u50A8\u5230\u6587\u4EF6\u4E2D\uFF09</p><p>req.on(&#39;end&#39;, () =&gt; {</p><pre><code>const imageType = &#39;image/jpeg&#39;

// 1.\u622A\u53D6\u4ECEimage/jpeg\u4F4D\u7F6E\u5F00\u59CB\u7684\u540E\u9762\u6240\u6709\u6570\u636E

const imageTypePosition = formData.indexOf(&#39;image/jpeg&#39;) + imageType.length + 4 // +4\u662F\u4E3A\u4E86\u53BB\u6389\\r\\n\\r\\n 2\u4E2A\u7A7A\u683C

let imageData = formData.substring(imageTypePosition)

// 2.imageData\u5F00\u59CB\u4F4D\u7F6E\u4F1A\u67092\u4E2A\u7A7A\u683C

// imageData = imageData.replace(/^\\s\\s*/, &#39;&#39;)

// 3.\u66FF\u6362\u6700\u540E\u7684boundary

imageData = imageData.substring(0, imageData.indexOf(\`--\${boundary}--\`))

// 4.\u5C06imageData\u7684\u6570\u636E\u5B58\u50A8\u5230\u6587\u4EF6\u4E2D

fs.writeFile(&#39;./image.png&#39;, imageData, &#39;binary&#39;, (err) =&gt; {

  console.log(&quot;\u6587\u4EF6\u5B58\u50A8\u6210\u529F&quot;);

  res.end(&quot;\u6587\u4EF6\u4E0A\u4F20\u5B8C\u6210&quot;)

})
</code></pre><p>})</p><p>})</p><p>// 2.\u5F00\u542F server \u670D\u52A1\u5668</p><p>server.listen(8000, () =&gt; {</p><p>console.log(&quot;\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F&quot;);</p><p>})</p>`,94),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","node-basic.html.vue"]]);export{d as default};
