import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c,a as n,d as t,e as p,b as s,r as l}from"./app.86e53fac.js";const r={},u=p('<ul><li><p>\u5F15\u7528\u8D4B\u503C\uFF08\u53C8\u79F0\u5F15\u7528\u4F20\u5740\uFF09\uFF1A\u67D0\u4E2A\u53D8\u91CF\u6216\u5E38\u91CF\u5B58\u653E\u4E86\u6307\u5411\u5F15\u7528\u7C7B\u578B\uFF08\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u51FD\u6570\uFF09\u5B57\u9762\u91CF\u7684\u5730\u5740\u3002</p></li><li><p>\u4F20\u503C\u8D4B\u503C\uFF1A\u67D0\u4E2A\u53D8\u91CF\u6216\u5E38\u91CF\u5B58\u653E\u4E86\u57FA\u672C\u7C7B\u578B\u7684\u5B57\u9762\u91CF</p></li><li><p>\u6D45\u62F7\u8D1D\uFF1A\u5728\u5806\u4E2D\u521B\u5EFA\u65B0\u7684\u5185\u5B58\u4FDD\u5B58\u62F7\u8D1D\u540E\u7684\u5BF9\u8C61\uFF0C\u62F7\u8D1D\u524D\u540E\u5BF9\u8C61\u7684\u57FA\u672C\u7C7B\u578B\u6570\u636E\u4E92\u4E0D\u5F71\u54CD\uFF1B\u4F46\u62F7\u8D1D\u524D\u540E\u5BF9\u8C61\u7684\u5F15\u7528\u7C7B\u578B\u6570\u636E\u56E0\u4E3A\u6307\u5411\u540C\u4E00\u4E2A\u5185\u5B58\u5730\u5740\uFF0C\u76F8\u4E92\u5F71\u54CD\u3002</p></li><li><p>\u6DF1\u62F7\u8D1D\uFF1A\u5728\u5806\u4E2D\u521B\u5EFA\u65B0\u7684\u5185\u5B58\u4FDD\u5B58\u62F7\u8D1D\u540E\u7684\u5BF9\u8C61\uFF0C\u62F7\u8D1D\u524D\u540E\u5BF9\u8C61\u7684\u57FA\u672C\u7C7B\u578B\u3001\u5F15\u7528\u7C7B\u578B\u6570\u636E\u4E92\u4E0D\u5F71\u54CD\u3002</p></li></ul><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">\u548C<strong>\u539F\u5BF9\u8C61\u5B57\u9762\u91CF</strong>\u662F\u5426\u6307\u5411\u540C\u4E00\u5730\u5740</th><th style="text-align:center;"><strong>\u539F\u5BF9\u8C61\u5B57\u9762\u91CF</strong>\u7B2C\u4E00\u5C42\u4E3A\u57FA\u672C\u7C7B\u578B\u662F\u5426\u76F8\u4E92\u5F71\u54CD</th><th style="text-align:center;"><strong>\u539F\u5BF9\u8C61\u5B57\u9762\u91CF</strong>\u5305\u542B\u5B50\u5BF9\u8C61\u662F\u5426\u76F8\u4E92\u5F71\u54CD</th></tr></thead><tbody><tr><td style="text-align:center;">\u5F15\u7528\u8D4B\u503C</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u6D45\u62F7\u8D1D</td><td style="text-align:center;">\u274C</td><td style="text-align:center;">\u274C</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u6DF1\u62F7\u8D1D</td><td style="text-align:center;">\u274C</td><td style="text-align:center;">\u274C</td><td style="text-align:center;">\u274C</td></tr></tbody></table><h2 id="\u5F15\u7528\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528\u8D4B\u503C" aria-hidden="true">#</a> \u5F15\u7528\u8D4B\u503C</h2><p>\u5F15\u7528\u8D4B\u503C\uFF08\u53C8\u79F0\u5F15\u7528\u4F20\u5740\uFF09\uFF1A\u67D0\u4E2A\u53D8\u91CF\u6216\u5E38\u91CF\u5B58\u653E\u4E86\u6307\u5411\u5F15\u7528\u7C7B\u578B\uFF08\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u51FD\u6570\uFF09\u5B57\u9762\u91CF\u7684\u5730\u5740\uFF0C\u4FEE\u6539\u8BE5\u53D8\u91CF\u6216\u5E38\u91CF\u7684\u5C5E\u6027\u3001\u65B9\u6CD5\u5373\u4FEE\u6539\u5B57\u9762\u91CF\u7684\u5185\u5BB9\u3002</p>',4),k={class:"custom-container details"},i=n("summary",null,"\u8BE6\u60C5",-1),d=s("\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u5BF9\u8C61\u662F\u6307\u5185\u5B58\u4E2D\u7684\u53EF\u4EE5\u88AB\u6807\u8BC6\u7B26\u5F15\u7528\u7684\u4E00\u5757\u533A\u57DF\u3002 \u2014\u2014\u5F15\u7528\u81EA MDN "),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures#%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"},y=s("JavaScript \u6570\u636E\u7C7B\u578B\u548C\u6570\u636E\u7ED3\u6784"),m=s("\u5728\u8F6F\u4EF6\u7CFB\u7EDF\u4E2D\uFF0C\u5BF9\u8C61\u5177\u6709\u552F\u4E00\u7684\u6807\u8BC6\u7B26\uFF0C\u5BF9\u8C61\u5305\u62EC\u5C5E\u6027\uFF08Properties\uFF09\u548C\u65B9\u6CD5\uFF08Methods\uFF09\uFF0C\u5C5E\u6027\u5C31\u662F\u9700\u8981\u8BB0\u5FC6\u7684\u4FE1\u606F\uFF0C\u65B9\u6CD5\u5C31\u662F\u5BF9\u8C61\u80FD\u591F\u63D0\u4F9B\u7684\u670D\u52A1 \u2014\u2014\u5F15\u7528\u81EA "),h={href:"https://zh.wikipedia.org/zh-my/%E5%AF%B9%E8%B1%A1_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)",target:"_blank",rel:"noopener noreferrer"},b=s("\u7EF4\u57FA\u767E\u79D1"),f=n("p",null,"\u6807\u8BC6\u7B26\uFF08identifier\uFF09\u53EF\u4EE5\u6807\u8BC6\u53D8\u91CF\u540D\u3001\u5E38\u91CF\u540D\u3001\u7C7B\u540D\u3001\u65B9\u6CD5\u540D\u3001\u63A5\u53E3\u540D\u7B49\uFF0C\u6807\u8BC6\u7B26\u6709\u5176\u547D\u540D\u89C4\u5219\u3002",-1),j=n("p",null,"\u5B57\u9762\u91CF\uFF1A\u6CA1\u6709\u7528\u6807\u8BC6\u7B26\u5C01\u88C5\u8D77\u6765\u7684\u6570\u636E\u539F\u59CB\u503C",-1),_=p(`<p>\u5F15\u7528\u7C7B\u578B\u5B57\u9762\u91CF\u5F15\u7528\u8D4B\u503C\u7ED9\u67D0\u4E2A\u53D8\u91CF\u540E\uFF0C\u518D\u5C06\u8BE5\u53D8\u91CF\u5F15\u7528\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u53D8\u91CF\uFF0C\u4E24\u4E2A\u53D8\u91CF\u6307\u5411\u540C\u4E00\u4E2A\u5B57\u9762\u91CF\u3002\u4FEE\u6539\u8BE5\u53D8\u91CF\u7684\u5C5E\u6027\u3001\u65B9\u6CD5\u5373\u4FEE\u6539\u5B57\u9762\u91CF\u7684\u5185\u5BB9\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj1&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> obj1
obj1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;obj1 changed&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;obj1 changed&#39; }</span>

<span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr1
arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1 changed&#39;</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">// [&#39;arr1 changed&#39;]</span>

<span class="token keyword">let</span> <span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fun1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> fun2 <span class="token operator">=</span> fun1
fun1<span class="token punctuation">.</span>n <span class="token operator">=</span> <span class="token string">&#39;fun1 changed&#39;</span> <span class="token comment">// \u6CE8\u610F\uFF1A\u51FD\u6570\u7684 name \u5C5E\u6027\u4E0D\u53EF\u6539</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun2<span class="token punctuation">.</span>n<span class="token punctuation">)</span> <span class="token comment">// fun1 changed</span>
</code></pre></div><p>\u5F15\u7528\u7C7B\u578B\u5B57\u9762\u91CF\u5F15\u7528\u8D4B\u503C\u7ED9\u67D0\u4E2A\u53D8\u91CF\u540E\uFF0C\u518D\u5C06\u8BE5\u53D8\u91CF\u5F15\u7528\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u53D8\u91CF\uFF0C\u518D\u5C06\u65B0\u7684\u5B57\u9762\u91CF\u5F15\u7528\u8D4B\u503C\u7ED9\u8BE5\u53D8\u91CF\uFF0C\u4E24\u4E2A\u53D8\u91CF\u6307\u5411\u4E0D\u540C\u7684\u5B57\u9762\u91CF\uFF0C\u4E24\u8005\u4E0D\u5F71\u54CD\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj1&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> obj1
obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj1 changed&#39;</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;obj1&#39; }</span>

<span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr1
arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1 changed&#39;</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">// [&#39;arr1&#39;]</span>

<span class="token keyword">let</span> <span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fun1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> fun2 <span class="token operator">=</span> fun1
<span class="token function-variable function">fun1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fun1 change&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// fun1</span>
</code></pre></div><h2 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h2><p>\u539F\u5BF9\u8C61\u5B57\u9762\u91CF\u7B2C\u4E00\u5C42\u4E3A\u57FA\u672C\u7C7B\u578B\uFF0C\u62F7\u8D1D\u5BF9\u8C61\u4E0E\u539F\u5BF9\u8C61\u4E0D\u76F8\u4E92\u5F71\u54CD\u3002<br> \u539F\u5BF9\u8C61\u5B57\u9762\u91CF\u5305\u542B\u5D4C\u5957\u5BF9\u8C61\uFF0C\u62F7\u8D1D\u5BF9\u8C61\u4E0E\u539F\u5BF9\u8C61\u76F8\u4E92\u5F71\u54CD\u3002</p><h3 id="\u5BF9\u8C61\u7684\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u6D45\u62F7\u8D1D</h3><p><code>Object.assign()</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">child</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;child&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span>

obj2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;name changed&#39;</span> <span class="token comment">// \u539F\u5BF9\u8C61\u5B57\u9762\u91CF\u7B2C\u4E00\u5C42\u4E3A\u57FA\u672C\u7C7B\u578B\u4E0D\u4F1A\u88AB\u6539\u53D8</span>
obj2<span class="token punctuation">.</span>child<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;child changed&#39;</span> <span class="token comment">// \u539F\u5BF9\u8C61\u5B57\u9762\u91CF\u5305\u542B\u5D4C\u5957\u5BF9\u8C61\u4F1A\u88AB\u6539\u53D8</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">// { name: &#39;obj1&#39;, child: { name: &#39;child changed&#39; } }</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p><code>Object.assign()</code> \u65B9\u6CD5\u628A\u6E90\u5BF9\u8C61<strong>\u81EA\u8EAB\u7684</strong>\u3001<strong>\u53EF\u679A\u4E3E</strong>\u5C5E\u6027\u62F7\u8D1D\u7ED9\u76EE\u6807\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u3002</p><p>\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E0E\u6E90\u5BF9\u8C61\u5177\u6709\u76F8\u540C\u7684\u952E\uFF0C\u5219\u76EE\u6807\u5BF9\u8C61\u7684\u5C5E\u6027\u4F1A\u8986\u76D6\u6E90\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> returnedTarget <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token comment">// { a: 1, b: 3, c: 4 }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>returnedTarget<span class="token punctuation">)</span> <span class="token comment">// { a: 1, b: 3, c: 4 }</span>
</code></pre></div></div><p>\u5C55\u5F00\u8FD0\u7B97\u7B26 <code>...</code> \u540C\u4E0A\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">child</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;child&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj1<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u6D45\u62F7\u8D1D</h3><p><code>concat()</code>\uFF1A\u539F\u6570\u7EC4\u4E0D\u4F1A\u6539\u53D8</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">child</span><span class="token operator">:</span> <span class="token string">&#39;child&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
arr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1 changed&#39;</span><span class="token punctuation">]</span> <span class="token comment">// \u539F\u6570\u7EC4\u5B57\u9762\u91CF\u7B2C\u4E00\u5C42\u4E3A\u57FA\u672C\u7C7B\u578B\u4E0D\u4F1A\u88AB\u6539\u53D8</span>
arr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>child <span class="token operator">=</span> <span class="token string">&#39;child changed&#39;</span> <span class="token comment">// \u539F\u6570\u7EC4\u5B57\u9762\u91CF\u5305\u542B\u5D4C\u5957\u5BF9\u8C61\u4F1A\u88AB\u6539\u53D8</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">// [&#39;arr1&#39;, { child: &#39;child changed&#39; }]</span>
</code></pre></div><p><code>slice()</code> \u540C\u4E0A\uFF1A\u539F\u6570\u7EC4\u4E0D\u4F1A\u6539\u53D8</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;arr1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">child</span><span class="token operator">:</span> <span class="token string">&#39;child&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h2><p>\u62F7\u8D1D\u5BF9\u8C61\u4E0E\u539F\u5BF9\u8C61\u4E0D\u76F8\u4E92\u5F71\u54CD\u3002</p><h3 id="json-\u5E8F\u5217\u5316\u518D\u53CD\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#json-\u5E8F\u5217\u5316\u518D\u53CD\u5E8F\u5217\u5316" aria-hidden="true">#</a> JSON \u5E8F\u5217\u5316\u518D\u53CD\u5E8F\u5217\u5316</h3><p>JSON \u5E8F\u5217\u5316\uFF08\u5B57\u7B26\u4E32\u5316\uFF09\u518D\u53CD\u5E8F\u5217\u5316\uFF08\u89E3\u6790\uFF09</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5F0A\u7AEF\uFF1A</p><ul><li><code>undefined</code>\u3001<code>symbol</code>\u3001\u51FD\u6570\u4F1A\u4E22\u5931</li><li><code>NaN</code>\u3001<code>Infinity</code>\u3001<code>-Infinity</code> \u4F1A\u88AB\u5E8F\u5217\u5316\u4E3A <code>null</code></li><li>\u65E0\u6CD5\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">c</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">NaN</span><span class="token punctuation">,</span>
  <span class="token literal-property property">e</span><span class="token operator">:</span> <span class="token number">Infinity</span><span class="token punctuation">,</span>
  <span class="token literal-property property">f</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> copyObj1 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copyObj1<span class="token punctuation">)</span> <span class="token comment">// {d: null, e: null, f: null}</span>

obj<span class="token punctuation">.</span>self <span class="token operator">=</span> obj
<span class="token keyword">const</span> copyObj2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Uncaught TypeError: Converting circular structure to JSON</span>
</code></pre></div><h3 id="\u9012\u5F52\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u5FAA\u73AF" aria-hidden="true">#</a> \u9012\u5F52\u5FAA\u73AF</h3><p>\u529F\u80FD\uFF1A</p>`,27),w=n("li",null,"\u652F\u6301\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u65E5\u671F\u3001\u6B63\u5219\u7684\u6DF1\u62F7\u8D1D",-1),v=n("li",null,"\u57FA\u672C\u7C7B\u578B\u3001\u51FD\u6570\u65E0\u9700\u6DF1\u62F7\u8D1D\uFF08\u6DF1\u62F7\u8D1D\u51FD\u6570\u610F\u4E49\u4E0D\u5927\uFF09",-1),x=n("li",null,[s("\u4F7F\u7528 "),n("code",null,"WeakMap"),s(" \u89E3\u51B3\u5FAA\u73AF\u5F15\u7528")],-1),O=n("li",null,[s("\u6B64\u7248\u672C\u4E0D\u652F\u6301 "),n("code",null,"Symbol"),s(" \u4F5C\u4E3A\u952E\u540D\u7684\u60C5\u51B5")],-1),N=s("\u6CA1\u6709\u62F7\u8D1D "),S=n("code",null,"DOM",-1),E=s(" \u5143\u7D20\uFF0C\u5177\u4F53\u5B9E\u73B0\u89C1 "),C={href:"https://juejin.cn/post/7072528644739956773#heading-6",target:"_blank",rel:"noopener noreferrer"},A=s("\u8F7B\u677E\u62FF\u4E0B JS \u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D"),J=p(`<div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\uFF1A\u5B58\u50A8\u5F53\u524D\u5BF9\u8C61\u548C\u62F7\u8D1D\u5BF9\u8C61\u7684\u5BF9\u5E94\u5173\u7CFB\u3002\u6BCF\u6B21\u62F7\u8D1D\u5F53\u524D\u5BF9\u8C61\u524D\uFF0C\u90FD\u5148\u770B\u4E00\u4E0B\u8FD9\u4E2A\u5BF9\u8C61\u662F\u4E0D\u662F\u5DF2\u7ECF\u62F7\u8D1D\u8FC7\u4E86\uFF0C\u5982\u679C\u6709\u7684\u8BDD\u76F4\u63A5\u8FD4\u56DE\u3002\u907F\u514D\u81EA\u8EAB\u5F15\u7528\u5BFC\u81F4\u6808\u6EA2\u51FA\u3002</p><p><code>WeakMap</code> \u5F31\u5F15\u7528\u6620\u5C04\u4E0E <code>Map</code> \u5F3A\u5F15\u7528\u6620\u5C04\u4E0D\u540C\u70B9\uFF1A</p><ul><li>\u5F3A\u5F15\u7528\u9700\u8981\u81EA\u5DF1\u624B\u52A8\u7F6E\u4E3A null \u624D\u80FD\u88AB\u56DE\u6536\uFF0C\u5F31\u5F15\u7528\u5219\u7531\u5783\u573E\u56DE\u6536\u673A\u5236\u5224\u65AD\u662F\u5426\u56DE\u6536\u3002</li><li><code>Map</code> \u53EF\u4EE5\u63A5\u53D7\u6240\u6709\u7C7B\u578B\u4F5C\u4E3A\u952E\u540D\uFF0C<code>WeakMap</code> \u53EA\u80FD\u63A5\u53D7\u5BF9\u8C61\uFF08null \u9664\u5916\uFF09\u4F5C\u4E3A\u952E\u540D\u3002</li></ul></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj <span class="token comment">// null \u65E0\u9700\u6DF1\u62F7\u8D1D\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u65E5\u671F\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u6B63\u5219\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj <span class="token comment">// \u57FA\u672C\u7C7B\u578B\u3001\u51FD\u6570\u65E0\u9700\u6DF1\u62F7\u8D1D\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>

  <span class="token comment">// \u5BF9\u8C61\u3001\u6570\u7EC4\u9700\u8981\u6DF1\u62F7\u8D1D</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u62F7\u8D1D\u524D\uFF0C\u5148\u53BB\u5B58\u50A8\u7A7A\u95F4\u4E2D\u627E\uFF0C\u5982\u679C\u6709\u7684\u8BDD\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">let</span> cloneObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">obj<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u521B\u5EFA\u65B0\u7684\u514B\u9686\u5BF9\u8C61\u6216\u6570\u7EC4</span>
  hash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> cloneObj<span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C\u5B58\u50A8\u7A7A\u95F4\u4E2D\u6CA1\u6709\u5C31\u5B58\u8FDB hash \u91CC</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cloneObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span> <span class="token comment">// \u9012\u5F52\u6DF1\u62F7\u8D1D\u6BCF\u5C42</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> cloneObj
<span class="token punctuation">}</span>
</code></pre></div><p>\u6D4B\u8BD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bool</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">string</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">empty1</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token literal-property property">empty2</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">array1</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">array2</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;nevermore&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">regexp</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(j|t)sx</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">obj</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">f1</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">,</span>
  <span class="token function-variable function">f2</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
a<span class="token punctuation">.</span>self <span class="token operator">=</span> a <span class="token comment">// \u5BF9\u8C61\u67D0\u4E2A\u5C5E\u6027\u5F15\u7528\u81EA\u8EAB\uFF08\u5FAA\u73AF\u5F15\u7528\uFF09</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment">// \u57FA\u672C\u7C7B\u578B\u65E0\u9700\u6DF1\u62F7\u8D1D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>number <span class="token operator">===</span> b<span class="token punctuation">.</span>number<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>bool <span class="token operator">===</span> b<span class="token punctuation">.</span>bool<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>string <span class="token operator">===</span> b<span class="token punctuation">.</span>string<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>empty1 <span class="token operator">===</span> b<span class="token punctuation">.</span>empty1<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>empty2 <span class="token operator">===</span> b<span class="token punctuation">.</span>empty2<span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token comment">// \u51FD\u6570\u65E0\u9700\u6DF1\u62F7\u8D1D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>f1 <span class="token operator">===</span> b<span class="token punctuation">.</span>f1<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>f2 <span class="token operator">===</span> b<span class="token punctuation">.</span>f2<span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token comment">// \u5BF9\u8C61\u3001\u6570\u7EC4\u9700\u8981\u6DF1\u62F7\u8D1D</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>self <span class="token operator">===</span> b<span class="token punctuation">.</span>self<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>array1 <span class="token operator">===</span> b<span class="token punctuation">.</span>array1<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>array2 <span class="token operator">===</span> b<span class="token punctuation">.</span>array2<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>date <span class="token operator">===</span> b<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>regexp <span class="token operator">===</span> b<span class="token punctuation">.</span>regexp<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>obj <span class="token operator">===</span> b<span class="token punctuation">.</span>obj<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="structuredclone" tabindex="-1"><a class="header-anchor" href="#structuredclone" aria-hidden="true">#</a> structuredClone()</h3>`,5),M=s("\u4F7F\u7528 Web API \u7684"),D=n("code",null,"structuredClone()",-1),I=s(" \u7ED3\u6784\u5316\u62F7\u8D1D\u53EF\u4EE5\u5B9E\u73B0\u6DF1\u62F7\u8D1D\uFF0C\u8BE6\u89C1"),B={href:"https://link.juejin.cn/?target=https://developer.mozilla.org/en-US/docs/Web/API/structuredClone",target:"_blank",rel:"noopener noreferrer"},W=s("MDN"),z=p(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">child</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;child&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> copyObj <span class="token operator">=</span> <span class="token function">structuredClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u7ED3\u6784\u5316\u62F7\u8D1D\uFF08\u6DF1\u62F7\u8D1D\uFF09</span>
obj<span class="token punctuation">.</span>child<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;child changed&#39;</span> <span class="token comment">// \u4FEE\u6539\u539F\u5BF9\u8C61</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// { child: { name: &#39;child changed&#39; } }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copyObj<span class="token punctuation">)</span> <span class="token comment">// { child: { name: &#39;child&#39; } }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>child <span class="token operator">===</span> copyObj<span class="token punctuation">.</span>child<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,2),P={href:"https://juejin.cn/post/6844904197595332622",target:"_blank",rel:"noopener noreferrer"},T=s("\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D"),V={href:"https://www.cnblogs.com/cench/p/6019453.html",target:"_blank",rel:"noopener noreferrer"},U=s("JS \u7684\u5F15\u7528\u8D4B\u503C\u4E0E\u4F20\u503C\u8D4B\u503C"),F={href:"https://juejin.cn/post/7072528644739956773",target:"_blank",rel:"noopener noreferrer"},L=s("\u8F7B\u677E\u62FF\u4E0B JS \u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D"),R={href:"https://link.juejin.cn/?target=https://developer.mozilla.org/en-US/docs/Web/API/structuredClone",target:"_blank",rel:"noopener noreferrer"},q=s("structuredClone()\u2014\u2014MDN");function G(H,K){const a=l("ExternalLinkIcon");return e(),c("div",null,[u,n("details",k,[i,n("p",null,[d,n("a",g,[y,t(a)])]),n("p",null,[m,n("a",h,[b,t(a)])]),f,j]),_,n("ul",null,[w,v,x,O,n("li",null,[N,S,E,n("a",C,[A,t(a)])])]),J,n("p",null,[M,D,I,n("a",B,[W,t(a)])]),z,n("ul",null,[n("li",null,[n("a",P,[T,t(a)])]),n("li",null,[n("a",V,[U,t(a)])]),n("li",null,[n("a",F,[L,t(a)])]),n("li",null,[n("a",R,[q,t(a)])])])])}const Y=o(r,[["render",G],["__file","deepClone.html.vue"]]);export{Y as default};
