import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as p,a as n,d as o,b as s,e as c,r as i}from"./app.8c0e81d7.js";const l={},u={id:"\u9879\u76EE\u6E90\u7801",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#\u9879\u76EE\u6E90\u7801","aria-hidden":"true"},"#",-1),k=s(),d={href:"https://github.com/xumingyu2018/coderhub",target:"_blank",rel:"noopener noreferrer"},v=s("\u9879\u76EE\u6E90\u7801"),m=c(`<h2 id="\u5168\u5C40\u914D\u7F6E\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u914D\u7F6E\u7C7B" aria-hidden="true">#</a> \u5168\u5C40\u914D\u7F6E\u7C7B</h2><h3 id="_1-\u9519\u8BEF\u4FE1\u606F\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_1-\u9519\u8BEF\u4FE1\u606F\u914D\u7F6E" aria-hidden="true">#</a> 1.\u9519\u8BEF\u4FE1\u606F\u914D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// config/error.js</span>
<span class="token keyword">const</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span> <span class="token operator">=</span> <span class="token string">&#39;name_or_password_is_empty&#39;</span>
<span class="token keyword">const</span> <span class="token constant">USER_ALREADY_EXISTS</span> <span class="token operator">=</span> <span class="token string">&#39;user_already_exists&#39;</span>
<span class="token keyword">const</span> <span class="token constant">USER_IS_NOT_EXISTS</span> <span class="token operator">=</span> <span class="token string">&#39;user_is_not_exists&#39;</span>
<span class="token keyword">const</span> <span class="token constant">PASSWORD_IS_INCORRECT</span> <span class="token operator">=</span> <span class="token string">&#39;password_is_incorrect&#39;</span>
<span class="token keyword">const</span> <span class="token constant">UNAUTHORIZATION</span> <span class="token operator">=</span> <span class="token string">&#39;unauthorization&#39;</span>
<span class="token keyword">const</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span> <span class="token operator">=</span> <span class="token string">&#39;operation_is_not_allowed&#39;</span>
<span class="token keyword">const</span> <span class="token constant">QUERY_IS_FAIL</span> <span class="token operator">=</span> <span class="token string">&#39;query_is_fail&#39;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token punctuation">,</span>
  <span class="token constant">USER_ALREADY_EXISTS</span><span class="token punctuation">,</span>
  <span class="token constant">USER_IS_NOT_EXISTS</span><span class="token punctuation">,</span>
  <span class="token constant">PASSWORD_IS_INCORRECT</span><span class="token punctuation">,</span>
  <span class="token constant">UNAUTHORIZATION</span><span class="token punctuation">,</span>
  <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token punctuation">,</span>
  <span class="token constant">QUERY_IS_FAIL</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u6587\u4EF6\u4E0A\u4F20\u8DEF\u5F84\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_2-\u6587\u4EF6\u4E0A\u4F20\u8DEF\u5F84\u914D\u7F6E" aria-hidden="true">#</a> 2.\u6587\u4EF6\u4E0A\u4F20\u8DEF\u5F84\u914D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// config/path.js</span>
<span class="token keyword">const</span> <span class="token constant">UPLOAD_PATH</span> <span class="token operator">=</span> <span class="token string">&#39;./uploads&#39;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">UPLOAD_PATH</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u670D\u52A1\u4E3B\u673A\u7AEF\u53E3\u53F7\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_3-\u670D\u52A1\u4E3B\u673A\u7AEF\u53E3\u53F7\u914D\u7F6E" aria-hidden="true">#</a> 3.\u670D\u52A1\u4E3B\u673A\u7AEF\u53E3\u53F7\u914D\u7F6E</h3><p>\u5B89\u88C5\uFF1A<code>npm install dotenv </code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// config/server.js</span>
<span class="token keyword">const</span> dotenv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dotenv&#39;</span><span class="token punctuation">)</span>

dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">SERVER_PORT</span><span class="token punctuation">,</span>
  <span class="token constant">SERVER_HOST</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env <span class="token comment">// \u4ECE\u73AF\u5883\u53D8\u91CF\u4E2D\u89E3\u6784\u83B7\u53D6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">// .env</span>
SERVER_HOST = http<span class="token operator">:</span><span class="token comment">//localhost</span>
SERVER_PORT = <span class="token number">8000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u5BC6\u94A5\u52A0\u5BC6\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_4-\u5BC6\u94A5\u52A0\u5BC6\u914D\u7F6E" aria-hidden="true">#</a> 4.\u5BC6\u94A5\u52A0\u5BC6\u914D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// config/srect.js</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u76F8\u5BF9\u76EE\u5F55\u548Cnode\u7A0B\u5E8F\u7684\u542F\u52A8\u76EE\u5F55\u6709\u5173\u7CFB\uFF08&quot;start&quot;: &quot;nodemon ./src/main.js&quot;\uFF09</span>
<span class="token keyword">const</span> <span class="token constant">PRIVATE_KEY</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;./src/config/keys/private.key&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">PUBLIC_KEY</span> <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;./src/config/keys/public.key&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">PRIVATE_KEY</span><span class="token punctuation">,</span>
  <span class="token constant">PUBLIC_KEY</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u6570\u636E\u5E93\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_5-\u6570\u636E\u5E93\u914D\u7F6E" aria-hidden="true">#</a> 5.\u6570\u636E\u5E93\u914D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// app/database.js</span>
<span class="token keyword">const</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mysql2&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 1.\u521B\u5EFA\u8FDE\u63A5\u6C60</span>
<span class="token keyword">const</span> connectionPool <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>
  <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;coderhub&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">connectionLimit</span><span class="token operator">:</span> <span class="token number">5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 2.\u83B7\u53D6\u8FDE\u63A5\u662F\u5426\u6210\u529F</span>
connectionPool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> connection</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u5224\u65AD\u662F\u5426\u6709\u9519\u8BEF\u4FE1\u606F</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDE\u63A5\u5931\u8D25&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 2.\u83B7\u53D6connection\uFF0C\u5C1D\u8BD5\u548C\u6570\u636E\u5E93\u5EFA\u7ACB\u4E00\u4E0B\u8FDE\u63A5</span>
  connection<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u548C\u6570\u636E\u5E93\u4EA4\u4E92\u5931\u8D25&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u636E\u5E93\u8FDE\u63A5\u6210\u529F\uFF0C\u53EF\u4EE5\u64CD\u4F5C\u6570\u636E\u5E93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 3.\u83B7\u53D6\u5230\u8FDE\u63A5\u6C60\u4E2D\u8FDE\u63A5\u5BF9\u8C61\uFF08promise\uFF09</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> connectionPool<span class="token punctuation">.</span><span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> connection

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-app-\u542F\u52A8\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_6-app-\u542F\u52A8\u914D\u7F6E" aria-hidden="true">#</a> 6.app \u542F\u52A8\u914D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// app/index.js</span>
<span class="token comment">// \u62BD\u53D6app</span>
<span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-bodyparser&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> registerRouters <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../router&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 1.\u521B\u5EFAapp</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 2.\u5BF9app\u4F7F\u7528\u4E2D\u95F4\u4EF6</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">bodyParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u52A8\u6001\u52A0\u8F7D\u8DEF\u7531</span>
<span class="token function">registerRouters</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>

<span class="token comment">// 3.\u5BFC\u51FAapp</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> app

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u52A8\u6001\u52A0\u8F7D\u8DEF\u7531-\u5728-app-\u4E2D\u81EA\u52A8\u6CE8\u518C" tabindex="-1"><a class="header-anchor" href="#_7-\u52A8\u6001\u52A0\u8F7D\u8DEF\u7531-\u5728-app-\u4E2D\u81EA\u52A8\u6CE8\u518C" aria-hidden="true">#</a> 7.\u52A8\u6001\u52A0\u8F7D\u8DEF\u7531\uFF08\u5728 app \u4E2D\u81EA\u52A8\u6CE8\u518C\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/index.js</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">registerRouters</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u8BFB\u53D6\u5F53\u524D\u6587\u4EF6\u4E0B\u7684\u6240\u6709\u6587\u4EF6</span>
  <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">)</span>

  <span class="token comment">// 2.\u904D\u5386\u6240\u6709\u6587\u4EF6</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u7559\u4E0B\u5E26router.js\u7ED3\u5C3E\u7684\u6587\u4EF6</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;_router.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
    <span class="token keyword">const</span> router <span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> registerRouters
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-\u4E3B\u7A0B\u5E8F\u542F\u52A8\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_8-\u4E3B\u7A0B\u5E8F\u542F\u52A8\u914D\u7F6E" aria-hidden="true">#</a> 8. \u4E3B\u7A0B\u5E8F\u542F\u52A8\u914D\u7F6E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./app&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">SERVER_PORT</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/server&#39;</span><span class="token punctuation">)</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./utils/handle-error&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 2.\u5C06app\u542F\u52A8</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token constant">SERVER_PORT</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;koa\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5DE5\u5177\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u7C7B" aria-hidden="true">#</a> \u5DE5\u5177\u7C7B</h2><h3 id="_1-\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_1-\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 1.\u5F02\u5E38\u5904\u7406</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// utils/handle-error.js</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token punctuation">,</span> <span class="token constant">USER_ALREADY_EXISTS</span><span class="token punctuation">,</span> <span class="token constant">USER_IS_NOT_EXISTS</span><span class="token punctuation">,</span> <span class="token constant">PASSWORD_IS_INCORRECT</span><span class="token punctuation">,</span> <span class="token constant">UNAUTHORIZATION</span><span class="token punctuation">,</span> <span class="token constant">QUERY_IS_FAIL</span><span class="token punctuation">,</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config/error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CE8\u610F\uFF1A\u5728main.js\u4E2D\u9700\u8981\u5F15\u5165\u4E00\u4E0B</span>
app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> message <span class="token operator">=</span><span class="token string">&#39;&#39;</span>

  <span class="token keyword">switch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1001</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u8D26\u6237\u6216\u5BC6\u7801\u4E3A\u7A7A&#39;</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token constant">USER_ALREADY_EXISTS</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1002</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u7528\u6237\u5DF2\u5B58\u5728&#39;</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token constant">USER_IS_NOT_EXISTS</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1003</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u7528\u6237\u4E0D\u5B58\u5728&#39;</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token constant">PASSWORD_IS_INCORRECT</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1004</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u5BC6\u7801\u4E0D\u6B63\u786E&#39;</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token constant">UNAUTHORIZATION</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1005</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u65E0\u6548\u7684token&#39;</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token constant">QUERY_IS_FAIL</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1006</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u67E5\u8BE2\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u6570\u636E\u662F\u5426\u5B58\u5728&#39;</span>
      <span class="token keyword">break</span>
    <span class="token keyword">case</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token operator">:</span>
      code <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2001</span><span class="token punctuation">,</span>
      message <span class="token operator">=</span> <span class="token string">&#39;\u672C\u6B21\u64CD\u4F5C\u6CA1\u6709\u6743\u9650&#39;</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>

  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>code<span class="token punctuation">,</span> message<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-md5-\u52A0\u5BC6" tabindex="-1"><a class="header-anchor" href="#_2-md5-\u52A0\u5BC6" aria-hidden="true">#</a> 2.md5 \u52A0\u5BC6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// md5.js</span>
<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">md5password</span><span class="token punctuation">(</span><span class="token parameter">password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u4F7F\u7528md5 16\u8FDB\u5236\u52A0\u5BC6</span>
  <span class="token keyword">const</span> md5pwd <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> md5pwd
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> md5password
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7528\u6237\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u7528\u6237\u6A21\u5757" aria-hidden="true">#</a> \u7528\u6237\u6A21\u5757</h2><ul><li>\u7528\u6237\u6CE8\u518C\u63A5\u53E3</li><li>\u7528\u6237\u5934\u50CF\u67E5\u770B\u63A5\u53E3</li></ul><h3 id="_1-\u7F16\u5199-router-\u5C42" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199-router-\u5C42" aria-hidden="true">#</a> 1.\u7F16\u5199 router \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/user_router.js</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> create<span class="token punctuation">,</span> showAvatarImage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controller/user_controller&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyUser<span class="token punctuation">,</span> handlePassword <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/user_middleware&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 1.\u521B\u5EFA\u8DEF\u7531\u5BF9\u8C61</span>
<span class="token keyword">const</span> userRouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/users&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6DFB\u52A0\u8DEF\u7531\u524D\u7F00</span>

<span class="token comment">// 2.\u5B9A\u4E49\u8DEF\u7531\u4E2D\u6620\u5C04(\u8FD9\u91CC\u53EA\u505A\u6620\u5C04\u5904\u7406\uFF0C\u4E0D\u505A\u5177\u4F53\u7684\u4E1A\u52A1\u5904\u7406)</span>
<span class="token comment">// 2.1.\u7528\u6237\u6CE8\u518C\u63A5\u53E3</span>
userRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> verifyUser<span class="token punctuation">,</span> handlePassword<span class="token punctuation">,</span> create<span class="token punctuation">)</span>
<span class="token comment">// 2.2\u7528\u6237\u5934\u50CF\u67E5\u770B</span>
userRouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/avatar/:userId&#39;</span><span class="token punctuation">,</span> showAvatarImage<span class="token punctuation">)</span>

<span class="token comment">// 3.\u5BFC\u51FA\u8DEF\u7531</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> userRouter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199verifyuser-handlepassword\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199verifyuser-handlepassword\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 2.\u7F16\u5199<code>verifyUser</code> <code>handlePassword</code>\u4E2D\u95F4\u4EF6</h3><ul><li>\u9A8C\u8BC1\u8D26\u6237</li><li>\u52A0\u5BC6</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// middleware/user_middleware.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token punctuation">,</span> <span class="token constant">USER_ALREADY_EXISTS</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config/error&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> userService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/user_service&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> md5password <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils/md5&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">verifyUser</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u9A8C\u8BC1\u7528\u6237\u540D\u548C\u5BC6\u7801\u662F\u5426\u4E3A\u7A7A</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>username <span class="token operator">||</span> <span class="token operator">!</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 2.\u9A8C\u8BC1\u7528\u6237\u540D\u662F\u5426\u5DF2\u5B58\u5728</span>
  <span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token keyword">await</span> userService<span class="token punctuation">.</span><span class="token function">findUserByName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>users<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">USER_ALREADY_EXISTS</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 3.\u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6\uFF08\u5F02\u6B65\uFF09</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">handlePassword</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u53D6\u51FA\u5BC6\u7801</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body
  <span class="token comment">// 2.\u5BF9\u5BC6\u7801\u8FDB\u884C\u52A0\u5BC6</span>
  ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token function">md5password</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>
  <span class="token comment">// 3.\u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  verifyUser<span class="token punctuation">,</span>
  handlePassword
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199-controller-\u5C42" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199-controller-\u5C42" aria-hidden="true">#</a> 3.\u7F16\u5199 controller \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// controller/user_controller.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config/path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fileService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/file_service&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> userService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/user_service&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u7528\u6237\u4F20\u9012\u8FC7\u6765\u7684\u6570\u636E</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body

    <span class="token comment">// 2.\u5C06\u7528\u6237\u6570\u636E\u4FDD\u5B58\u5230\u6570\u636E\u5E93\u4E2D</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> userService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

    <span class="token comment">// 3.\u67E5\u770B\u5B58\u50A8\u7ED3\u679C\uFF0C\u544A\u77E5\u524D\u7AEF\u521B\u5EFA\u6210\u529F</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u7528\u6237\u521B\u5EFA\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">showAvatarImage</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u7528\u6237id</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params

    <span class="token comment">// 2.\u83B7\u53D6userId\u5BF9\u5E94\u7684\u5934\u50CF</span>
    <span class="token keyword">const</span> avatarInfo <span class="token operator">=</span> <span class="token keyword">await</span> fileService<span class="token punctuation">.</span><span class="token function">queryAvatarWithUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>

    <span class="token comment">// 3.\u8BFB\u53D6\u5934\u50CF\u6240\u5728\u7684\u6587\u4EF6</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> filename<span class="token punctuation">,</span> mimetype <span class="token punctuation">}</span> <span class="token operator">=</span> avatarInfo
    <span class="token comment">// \u82E5\u4E0D\u52A0\u8FD9\u4E00\u53E5\uFF0C\u6D4F\u89C8\u5668\u4F1A\u4EE5\u6587\u4EF6\u65B9\u5F0F\u4E0B\u8F7D\u56FE\u7247</span>
    ctx<span class="token punctuation">.</span>type <span class="token operator">=</span> mimetype
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UPLOAD_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u7F16\u5199-service-\u5C42" tabindex="-1"><a class="header-anchor" href="#_4-\u7F16\u5199-service-\u5C42" aria-hidden="true">#</a> 4.\u7F16\u5199 service \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// service/user_service.js</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../app/database&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6DFB\u52A0\u7528\u6237</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u7528\u6237user</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> user
    <span class="token comment">// 2.\u62FC\u63A5statement sql\u8BED\u53E5</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token string">&#39;insert into \`user\` (username, password) values (?, ?);&#39;</span>
    <span class="token comment">// 3.\u6267\u884Cstatement</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>username<span class="token punctuation">,</span> password<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6839\u636E\u7528\u6237\u540D\u83B7\u53D6\u7528\u6237\u4FE1\u606F</span>
  <span class="token keyword">async</span> <span class="token function">findUserByName</span><span class="token punctuation">(</span><span class="token parameter">username</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token string">&#39;select * from \`user\` where username = ?;&#39;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>values<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> values
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4FEE\u6539\u5934\u50CF</span>
  <span class="token keyword">async</span> <span class="token function">updateUserAvatar</span><span class="token punctuation">(</span><span class="token parameter">avatarUrl<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">update user set avatar_url = ? where id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>avatarUrl<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u767B\u5F55\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u767B\u5F55\u6A21\u5757" aria-hidden="true">#</a> \u767B\u5F55\u6A21\u5757</h2><h3 id="_1-\u7F16\u5199-router-\u5C42-1" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199-router-\u5C42-1" aria-hidden="true">#</a> 1.\u7F16\u5199 router \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/login_router.js</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> sign<span class="token punctuation">,</span> test <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controller/login_controller&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyLogin<span class="token punctuation">,</span> verifyAuth<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/login_middleware&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> loginRouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6DFB\u52A0\u8DEF\u7531\u524D\u7F00</span>

loginRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> verifyLogin<span class="token punctuation">,</span> sign<span class="token punctuation">)</span>
loginRouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/verify&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> test<span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> loginRouter

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199verifylogin-verifyauth\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199verifylogin-verifyauth\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 2.\u7F16\u5199<code>verifyLogin</code> <code>verifyAuth</code>\u4E2D\u95F4\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// middleware/login_middleware.js</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token punctuation">,</span> <span class="token constant">USER_IS_NOT_EXISTS</span><span class="token punctuation">,</span> <span class="token constant">PASSWORD_IS_INCORRECT</span><span class="token punctuation">,</span> <span class="token constant">UNAUTHORIZATION</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/error&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">PUBLIC_KEY</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/srect&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> userService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../service/user_service&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> md5password <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils/md5&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">verifyLogin</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body
  <span class="token comment">// 1.\u9A8C\u8BC1\u7528\u6237\u540D\u548C\u5BC6\u7801\u662F\u5426\u4E3A\u7A7A</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>username <span class="token operator">||</span> <span class="token operator">!</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">NAME_OR_PASSWORD_IS_EMPTY</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 2.\u9A8C\u8BC1\u7528\u6237\u540D\u5728\u6570\u636E\u53EF\u4E2D\u662F\u5426\u5DF2\u5B58\u5728</span>
  <span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token keyword">await</span> userService<span class="token punctuation">.</span><span class="token function">findUserByName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> users<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">USER_IS_NOT_EXISTS</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 3.\u9A8C\u8BC1\u5BC6\u7801\u662F\u5426\u6B63\u786E</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>password <span class="token operator">!==</span> <span class="token function">md5password</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">PASSWORD_IS_INCORRECT</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 4.\u5C06user\u5BF9\u8C61\u4FDD\u5B58\u5728ctx\u4E2D</span>
  ctx<span class="token punctuation">.</span>user <span class="token operator">=</span> user

  <span class="token comment">// \u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6(\u9881\u53D1token)</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5F88\u591A\u8BF7\u6C42\u90FD\u8981\u7528\u5230\u9A8C\u8BC1\u7528\u6237\uFF0C\u6240\u7528\u5C01\u88C5\u5230\u4E2D\u95F4\u4EF6\u4E2D</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyAuth</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6token</span>
    <span class="token keyword">const</span> authorization <span class="token operator">=</span>ctx<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>authorization

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>authorization<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">UNAUTHORIZATION</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> authorization<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;Bearer &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// 2.\u9A8C\u8BC1token\u662F\u5426\u6709\u6548</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
      <span class="token comment">// 2.1\u83B7\u53D6token\u4FE1\u606F</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> <span class="token constant">PUBLIC_KEY</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">algorithms</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;RS256&#39;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token comment">// 2.2\u5C06token\u4FE1\u606F\u4FDD\u5B58\u5728ctx\u4E2D</span>
      ctx<span class="token punctuation">.</span>user <span class="token operator">=</span> result

      <span class="token comment">// 3.\u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
      <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">UNAUTHORIZATION</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  verifyLogin<span class="token punctuation">,</span>
  verifyAuth
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199-controller-\u5C42-1" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199-controller-\u5C42-1" aria-hidden="true">#</a> 3.\u7F16\u5199 controller \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// controller/login_controller.js</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">PRIVATE_KEY</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/srect&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">LoginRouter</span><span class="token punctuation">{</span>
  <span class="token function">sign</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u7528\u6237id\u548C\u5BC6\u7801</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> username <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

    <span class="token comment">// 2.\u9881\u53D1\u4EE4\u724C</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token punctuation">,</span> username<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">PRIVATE_KEY</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">,</span>
      <span class="token literal-property property">algorithm</span><span class="token operator">:</span> <span class="token string">&#39;RS256&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 3.\u8FD4\u56DE\u7528\u6237\u4FE1\u606F</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> token <span class="token punctuation">}</span><span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token comment">// \u9A8C\u8BC1token</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;\u9A8C\u8BC1\u6210\u529F&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoginRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6743\u9650\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6743\u9650\u6A21\u5757" aria-hidden="true">#</a> \u6743\u9650\u6A21\u5757</h2><h3 id="_1-\u7F16\u5199\u6743\u9650\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199\u6743\u9650\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 1.\u7F16\u5199\u6743\u9650\u4E2D\u95F4\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// middleware/permission_middleware.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config/error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> permissionService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/permission_service&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// \u9A8C\u8BC1\uFF1A\u53EA\u80FD\u9A8C\u8BC1\u7528\u6237\u662F\u5426\u6709\u64CD\u4F5Cmoment\u7684\u6743\u9650\uFF08\u4E0D\u80FD\u9A8C\u8BC1\u64CD\u4F5C\u5176\u4ED6\u7684\u6743\u9650\uFF0C\u53EF\u6269\u5C55\u6027\u4E0D\u5F3A\uFF09</span>
<span class="token comment">// \u65B9\u6CD5\u4E00</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyMomentPermission</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u4FEE\u6539\u52A8\u6001\u7684id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
  <span class="token comment">// \u83B7\u53D6\u767B\u5F55\u7528\u6237id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

  <span class="token comment">// \u67E5\u8BE2user\u7684id\u662F\u5426\u6709\u4FEE\u6539momentId\u7684\u6743\u9650</span>
  <span class="token keyword">const</span> isPermission <span class="token operator">=</span> <span class="token keyword">await</span> permissionService<span class="token punctuation">.</span><span class="token function">checkMoment</span><span class="token punctuation">(</span>momentId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65B9\u6CD5\u4E8C(\u4F20\u5165\u53C2\u6570\uFF0C\u5B9E\u73B0\u52A8\u6001\u6743\u9650\u8BA4\u8BC1)</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyPermission</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resource</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u4FEE\u6539\u52A8\u6001\u7684id</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
    <span class="token comment">// \u83B7\u53D6\u767B\u5F55\u7528\u6237id</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

    <span class="token comment">// \u67E5\u8BE2user\u7684id\u662F\u5426\u6709\u4FEE\u6539momentId\u7684\u6743\u9650</span>
    <span class="token keyword">const</span> isPermission <span class="token operator">=</span> <span class="token keyword">await</span> permissionService<span class="token punctuation">.</span><span class="token function">checkMoment</span><span class="token punctuation">(</span>momentId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65B9\u6CD5\u4E09</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyPermission</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u83B7\u53D6\u767B\u5F55\u7528\u6237id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

  <span class="token comment">// 2.\u83B7\u53D6\u4E2D\u8D44\u6E90\u7684name/id</span>
  <span class="token comment">// name =&gt; moment/user/comment</span>
  <span class="token comment">// params: { momentId: 7}</span>
  <span class="token comment">// keyName =&gt; momentId</span>
  <span class="token keyword">const</span> keyName <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> resourceId <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span>
  <span class="token keyword">const</span> resourceName <span class="token operator">=</span> keyName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;Id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u67E5\u8BE2user\u7684id\u662F\u5426\u6709\u4FEE\u6539momentId\u7684\u6743\u9650</span>
  <span class="token keyword">const</span> isPermission <span class="token operator">=</span> <span class="token keyword">await</span> permissionService<span class="token punctuation">.</span><span class="token function">checkResource</span><span class="token punctuation">(</span>resourceName<span class="token punctuation">,</span> resourceId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  verifyMomentPermission<span class="token punctuation">,</span>
  verifyPermission
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199-service-\u5C42" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199-service-\u5C42" aria-hidden="true">#</a> 2.\u7F16\u5199 service \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// service/permission_service.js</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../app/database&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">PermissionService</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65B9\u6CD5\u4E00</span>
  <span class="token keyword">async</span> <span class="token function">checkMoment</span><span class="token punctuation">(</span><span class="token parameter">momentId<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from moment where id = ? and user_id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>momentId<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// \u957F\u5EA6\u5927\u4E8E0\u65F6\u8BF4\u660E\u6709\u6743\u9650\uFF08\u80FD\u67E5\u51FA\u5BF9\u5E94\u7684moment\uFF09</span>
    <span class="token comment">// !!\uFF1A\u8F6C\u5316\u4E3Aboolean\u7C7B\u578B</span>
    <span class="token comment">// return !!result.length</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>result<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>

  <span class="token comment">// \u65B9\u6CD5\u4E09</span>
  <span class="token keyword">async</span> <span class="token function">checkResource</span><span class="token punctuation">(</span><span class="token parameter">resourceName<span class="token punctuation">,</span> resourceId<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resourceName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> where id = ? and user_id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>resourceId<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>result<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PermissionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u6A21\u5757" aria-hidden="true">#</a> \u52A8\u6001\u6A21\u5757</h2><ul><li>\u6DFB\u52A0\u52A8\u6001\uFF08\u767B\u5F55\u540E\uFF09</li><li>\u52A8\u6001\u5217\u8868\u67E5\u8BE2</li><li>\u52A8\u6001\u8BE6\u60C5\u67E5\u8BE2</li><li>\u4FEE\u6539\u52A8\u6001\uFF08\u767B\u5F55\u540E\u4E14\u6709\u64CD\u4F5C\u6743\u9650\uFF09</li><li>\u4E3A\u52A8\u6001\u6DFB\u52A0\u6807\u7B7E\uFF08\u591A\u5BF9\u591A\uFF09</li></ul><h3 id="_1-\u7F16\u5199-router-\u5C42-2" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199-router-\u5C42-2" aria-hidden="true">#</a> 1.\u7F16\u5199 router \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/moment_router.js</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyAuth <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/login_middleware&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> create<span class="token punctuation">,</span> list<span class="token punctuation">,</span> detail<span class="token punctuation">,</span> update<span class="token punctuation">,</span> remove<span class="token punctuation">,</span> addLabels <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controller/moment_controller&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyMomentPermission<span class="token punctuation">,</span> verifyPermission<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/permission_middleware&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> verifyLabelExists <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/label_middleware&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> momentRouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/moment&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u589E</span>
momentRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> create<span class="token punctuation">)</span>
<span class="token comment">// \u67E5</span>
momentRouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span>
momentRouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/:momentId&#39;</span><span class="token punctuation">,</span> detail<span class="token punctuation">)</span>
<span class="token comment">// \u6539\uFF08\u53EA\u6709\u767B\u5F55\u3010verifyAuth\u3011\u4E14\u6709\u6743\u9650\u3010verifyMomentPermission\u3011\u624D\u80FD\u6539\uFF09</span>
momentRouter<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&#39;/:momentId&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> verifyPermission<span class="token punctuation">,</span> update<span class="token punctuation">)</span>
<span class="token comment">// \u5220</span>
momentRouter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/:momentId&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> verifyPermission<span class="token punctuation">,</span> remove<span class="token punctuation">)</span>

<span class="token comment">// \u6DFB\u52A0\u6807\u7B7E</span>
<span class="token comment">// \u4E2D\u95F4\u4EF6\uFF1A</span>
<span class="token comment">//   1.\u662F\u5426\u767B\u5F55</span>
<span class="token comment">//   2.\u9A8C\u8BC1\u662F\u5426\u6709\u64CD\u4F5C\u8FD9\u4E2A\u52A8\u6001\u7684\u6743\u9650</span>
<span class="token comment">//   3.\u989D\u5916\u4E2D\u95F4\u4EF6\uFF1A\u9A8C\u8BC1label\u7684name\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u4E8Elabel\u8868\u4E2D</span>
<span class="token comment">//   * \u5982\u679C\u5B58\u5728\uFF0C\u90A3\u4E48\u76F4\u63A5\u4F7F\u7528\u5373\u53EF</span>
<span class="token comment">//   * \u5982\u679C\u4E0D\u5B58\u5728\uFF0C\u90A3\u4E48\u9700\u8981\u5148\u5C06label\u7684name\u6DFB\u52A0label\u8868</span>
<span class="token comment">//   4.\u6700\u7EC8\u6B65\u9AA4</span>
<span class="token comment">//   * \u6240\u6709\u7684labels\u90FD\u5DF2\u7ECF\u5728label\u8868</span>
<span class="token comment">//   * \u52A8\u60012\u548Clabel\u5173\u7CFB\uFF0C\u6DFB\u52A0\u5230\u5173\u7CFB\u8868</span>
momentRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/:momentId/labels&#39;</span><span class="token punctuation">,</span> verifyLabelExists<span class="token punctuation">,</span> addLabels<span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> momentRouter

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199verifylabelexists\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199verifylabelexists\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 2.\u7F16\u5199<code>verifyLabelExists</code>\u4E2D\u95F4\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config/error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> permissionService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/permission_service&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// \u9A8C\u8BC1\uFF1A\u53EA\u80FD\u9A8C\u8BC1\u7528\u6237\u662F\u5426\u6709\u64CD\u4F5Cmoment\u7684\u6743\u9650\uFF08\u4E0D\u80FD\u9A8C\u8BC1\u64CD\u4F5C\u5176\u4ED6\u7684\u6743\u9650\uFF0C\u53EF\u6269\u5C55\u6027\u4E0D\u5F3A\uFF09</span>
<span class="token comment">// \u65B9\u6CD5\u4E00</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyMomentPermission</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u4FEE\u6539\u52A8\u6001\u7684id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
  <span class="token comment">// \u83B7\u53D6\u767B\u5F55\u7528\u6237id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

  <span class="token comment">// \u67E5\u8BE2user\u7684id\u662F\u5426\u6709\u4FEE\u6539momentId\u7684\u6743\u9650</span>
  <span class="token keyword">const</span> isPermission <span class="token operator">=</span> <span class="token keyword">await</span> permissionService<span class="token punctuation">.</span><span class="token function">checkMoment</span><span class="token punctuation">(</span>momentId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65B9\u6CD5\u4E8C</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyPermission</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u83B7\u53D6\u767B\u5F55\u7528\u6237id</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

  <span class="token comment">// 2.\u83B7\u53D6\u4E2D\u8D44\u6E90\u7684name/id</span>
  <span class="token comment">// name =&gt; moment/user/comment</span>
  <span class="token comment">// params: { momentId: 7}</span>
  <span class="token comment">// keyName =&gt; momentId</span>
  <span class="token keyword">const</span> keyName <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> resourceId <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span>
  <span class="token keyword">const</span> resourceName <span class="token operator">=</span> keyName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;Id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u67E5\u8BE2user\u7684id\u662F\u5426\u6709\u4FEE\u6539momentId\u7684\u6743\u9650</span>
  <span class="token keyword">const</span> isPermission <span class="token operator">=</span> <span class="token keyword">await</span> permissionService<span class="token punctuation">.</span><span class="token function">checkResource</span><span class="token punctuation">(</span>resourceName<span class="token punctuation">,</span> resourceId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">OPERATION_IS_NOT_ALLOWED</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6267\u884C\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  verifyMomentPermission<span class="token punctuation">,</span>
  verifyPermission
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199-controller-\u5C42-2" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199-controller-\u5C42-2" aria-hidden="true">#</a> 3.\u7F16\u5199 controller \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// controller/moment_controller.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">QUERY_IS_FAIL</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config/error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> momentService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/moment_service&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">MomentController</span><span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u52A8\u6001\u5185\u5BB9</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body

    <span class="token comment">// 2.\u52A8\u6001\u7531\u8C01\u53D1\u5E03\uFF08token =&gt; id/username\uFF09</span>
    <span class="token comment">// \u7531\u4E0A\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u4F20\u9012\u8FC7\u6765\u7684ctx.user\u786E\u5B9A</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

    <span class="token comment">// 3.\u5C06\u52A8\u6001\u76F8\u5173\u6570\u636E\u4FDD\u5B58\u5230\u6570\u636E\u5E93\u4E2D</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> id<span class="token punctuation">)</span>

    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u521B\u5EFA\u7528\u6237\u52A8\u6001\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5206\u9875\u6761\u4EF6(moment?offset=0&amp;size=10 -&gt; query)</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> offset<span class="token punctuation">,</span> size <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>query

    <span class="token comment">// \u4ECE\u6570\u636E\u5E93\u4E2D\u67E5\u8BE2\u52A8\u6001\u8868</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">queryList</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> size<span class="token punctuation">)</span>

    <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u67E5\u8BE2\u52A8\u6001\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u52A8\u6001\u7684id(moment/1)</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params

    <span class="token comment">// 2.\u6839\u636Eid\u67E5\u8BE2\u67D0\u4E00\u6761\u52A8\u6001</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">queryById</span><span class="token punctuation">(</span>momentId<span class="token punctuation">)</span>

    <span class="token comment">// 3.\u82E5\u6CA1\u6709\u67E5\u5230\uFF0C\u8FD4\u56DE\u9519\u8BEF\u4FE1\u606F</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token constant">QUERY_IS_FAIL</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 4.\u6210\u529F\u5219\u8FD4\u56DE\u6570\u636E</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u67E5\u8BE21\u6761\u52A8\u6001\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u8981\u4FEE\u6539\u7684\u52A8\u6001\u7684id</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params

    <span class="token comment">// 2.\u83B7\u53D6\u4FEE\u6539\u7684\u5185\u5BB9</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body

    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">updateMoment</span><span class="token punctuation">(</span>momentId<span class="token punctuation">,</span> content<span class="token punctuation">)</span>

    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u4FEE\u6539\u52A8\u6001\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">removeMoment</span><span class="token punctuation">(</span>momentId<span class="token punctuation">)</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u5220\u9664\u52A8\u6001\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6807\u7B7E\u63A5\u53E3\uFF0C\u7ED9moment\u6DFB\u52A0label</span>
  <span class="token keyword">async</span> <span class="token function">addLabels</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u53C2\u6570</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> labels <span class="token punctuation">}</span> <span class="token operator">=</span> ctx
    <span class="token keyword">const</span> <span class="token punctuation">{</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params

    <span class="token comment">// 2.\u5C06moment_id\u548Clabel_id\u6DFB\u52A0\u5230moment_label\u8868\u4E2D</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> label <span class="token keyword">of</span> labels<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 2.1\u5224\u65ADlabel_id\u662F\u5426\u5DF2\u7ECF\u548Cmoment_id\u5DF2\u7ECF\u5B58\u5728\u8BE5\u6570\u636E</span>
        <span class="token keyword">const</span> isExists <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">hasLabel</span><span class="token punctuation">(</span>momentId<span class="token punctuation">,</span> label<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>isExists<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isExists<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 2.2\u4E0D\u5B58\u5728moment_id\u548Clabel_id\u5173\u7CFB\uFF0C\u5219\u63D2\u5165</span>
          <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> momentService<span class="token punctuation">.</span><span class="token function">addLabel</span><span class="token punctuation">(</span>momentId<span class="token punctuation">,</span> label<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u4E3A\u52A8\u6001\u6DFB\u52A0\u6807\u7B7E\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">3001</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u4E3A\u52A8\u6001\u6DFB\u52A0\u6807\u7B7E\u5931\u8D25&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MomentController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u7F16\u5199-service-\u5C42-1" tabindex="-1"><a class="header-anchor" href="#_4-\u7F16\u5199-service-\u5C42-1" aria-hidden="true">#</a> 4.\u7F16\u5199 service \u5C42</h3><ul><li>\u5B66\u4E60 SQL \u7684\u5199\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// service/moment_service.js</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../app/database&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">MomentService</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">insert into moment (content, user_id) values (?, ?)</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token comment">// \u9ED8\u8BA4offset = 0 ,size = 10</span>
  <span class="token comment">// \u67E5\u8BE2\u52A8\u6001\u5217\u8868\uFF0C\u5305\u542B\u8BC4\u8BBA\u4E2A\u6570\uFF0C\u6807\u7B7E\u4E2A\u6570</span>
  <span class="token keyword">async</span> <span class="token function">queryList</span><span class="token punctuation">(</span><span class="token parameter">offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">10</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      select m.id id, m.content content, m.createAt createTime, m.updateAt updateTime, json_object(&#39;id&#39;, u.id, &#39;username&#39;, u.username, &#39;avatarUrl&#39;, u.avatar_url, &#39;createTime&#39;, u.createAt, &#39;updateTime&#39;, u.updateAt) user,
      (select count(*) from comment where comment.moment_id = m.id) commentCount,
      (select count(*) from moment_label ml where ml.moment_id = m.id) labelCount
      from moment m
      left join user u on u.id = m.user_id
      limit ? offset ?
    </span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">String</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">String</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token comment">// \u67E5\u8BE2\u52A8\u6001\u8BE6\u60C5\uFF0C\u5305\u542B\u8BC4\u8BBA\u5217\u8868\uFF0C\u7528\u6237\u5217\u8868</span>
  <span class="token keyword">async</span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      select
        m.id id, m.content content, m.createAt createTime, m.updateAt updateTime,
        json_object(&#39;id&#39;, u.id, &#39;username&#39;, u.username, &#39;avatarUrl&#39;, u.avatar_url, &#39;createTime&#39;, u.createAt, &#39;updateTime&#39;, u.updateAt) user,
        (
          select
            json_arrayagg(json_object(
              &#39;id&#39;, c.id, &#39;content&#39;, c.content, &#39;commentId&#39;, c.comment_id,
              &#39;user&#39;, json_object(&#39;id&#39;, cu.id, &#39;name&#39;, cu.username, &#39;avatarUrl&#39;, u.avatar_url)
            ))
          from comment c
          left join user cu on c.user_id = cu.id
          where c.moment_id = m.id
        ) comments,
        (
          json_arrayagg(json_object(
            &#39;id&#39;, l.id, &#39;name&#39;, l.name
          ))
        ) labels
      from moment m
      left join user u on u.id = m.user_id
      left join moment_label ml on ml.moment_id = m.id
      left join label l on ml.label_id = l.id
      where m.id = ?
      group by m.id;
    </span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">updateMoment</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">update moment set content = ? where id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> id<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">removeMoment</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">delete from moment where id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5224\u65AD\u6807\u7B7E\u548C\u52A8\u6001\u8868\u5173\u7CFB\u662F\u5426\u5B58\u5728</span>
  <span class="token keyword">async</span> <span class="token function">hasLabel</span><span class="token punctuation">(</span><span class="token parameter">momentId<span class="token punctuation">,</span> labelId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from moment_label where moment_id = ? and label_id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>momentId<span class="token punctuation">,</span> labelId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>result<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">addLabel</span><span class="token punctuation">(</span><span class="token parameter">momentId<span class="token punctuation">,</span> labelId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">insert into moment_label (moment_id, label_id) values (?, ?)</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>momentId<span class="token punctuation">,</span> labelId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MomentService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8BC4\u8BBA\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u8BC4\u8BBA\u6A21\u5757" aria-hidden="true">#</a> \u8BC4\u8BBA\u6A21\u5757</h2><ul><li>\u53D1\u8868\u8BC4\u8BBA</li><li>\u56DE\u590D\u8BC4\u8BBA</li></ul><h3 id="_1-\u7F16\u5199-router-\u5C42-3" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199-router-\u5C42-3" aria-hidden="true">#</a> 1.\u7F16\u5199 router \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/comment_router.js</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyAuth <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/login_middleware&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> create<span class="token punctuation">,</span> reply <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controller/comment_controller&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> commentRouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/comment&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6DFB\u52A0\u8DEF\u7531\u524D\u7F00</span>

<span class="token comment">// \u589E\uFF1A\u65B0\u589E\u8BC4\u8BBA</span>
commentRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> create<span class="token punctuation">)</span>
<span class="token comment">// \u589E\uFF1A\u56DE\u590D\u8BC4\u8BBA</span>
commentRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/reply&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> reply<span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> commentRouter

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199-controller-\u5C42" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199-controller-\u5C42" aria-hidden="true">#</a> 2.\u7F16\u5199 controller \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// controller/comment_controller.js</span>
<span class="token keyword">const</span> commentService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/comment_service&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">commentController</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D1\u8868\u8BC4\u8BBA</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u4ECEbody\u4E2D\u83B7\u53D6\u53C2\u6570</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> momentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body
    <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2.\u64CD\u4F5C\u6570\u636E\u5E93</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> commentService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>

    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u53D1\u8868\u8BC4\u8BBA\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u56DE\u590D\u8BC4\u8BBA</span>
  <span class="token keyword">async</span> <span class="token function">reply</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u4ECEbody\u4E2D\u83B7\u53D6\u53C2\u6570</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> commentId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body
    <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

    <span class="token comment">// 2.\u64CD\u4F5C\u6570\u636E\u5E93</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> commentService<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> commentId<span class="token punctuation">,</span> id<span class="token punctuation">)</span>

    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u56DE\u590D\u8BC4\u8BBA\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">commentController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199-service-\u5C42" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199-service-\u5C42" aria-hidden="true">#</a> 3.\u7F16\u5199 service \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// service/comment_service.js</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../app/database&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CommentService</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">insert into comment (content, moment_id, user_id) values (?, ?, ?)</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">reply</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> commentId<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">insert into comment (content, moment_id, comment_id, user_id) values (?, ?, ?, ?)</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> momentId<span class="token punctuation">,</span> commentId<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommentService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6807\u7B7E\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6807\u7B7E\u6A21\u5757" aria-hidden="true">#</a> \u6807\u7B7E\u6A21\u5757</h2><ul><li>\u65B0\u589E\u6807\u7B7E</li><li>\u5224\u65AD\u6807\u7B7E\u662F\u5426\u5B58\u5728</li></ul><h3 id="_1-\u7F16\u5199-router-\u5C42-4" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199-router-\u5C42-4" aria-hidden="true">#</a> 1.\u7F16\u5199 router \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/label_router.js</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyAuth <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/login_middleware&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> create<span class="token punctuation">,</span> list <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controller/label_controller&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> labelRouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/label&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u6DFB\u52A0\u8DEF\u7531\u524D\u7F00</span>

labelRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> create<span class="token punctuation">)</span>
labelRouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> labelRouter

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199verifylabelexists-\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199verifylabelexists-\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 2.\u7F16\u5199<code>verifyLabelExists</code> \u4E2D\u95F4\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// middleware/label_middleware.js</span>
<span class="token keyword">const</span> labelService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/label_service&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F20\u5165label\u65F6\uFF0C\u4E0D\u786E\u5B9Alabels\u662F\u5426\u6709name\u5DF2\u7ECF\u5B58\u5728label\u8868\u4E2D</span>
<span class="token comment">// \u6240\u4EE5\u9700\u8981\u5C06labels\u90FD\u4FDD\u5B58\u5728label\u4E2D\uFF0C\u83B7\u53D6labels\u7684id</span>
<span class="token comment">// \u5C06\u83B7\u53D6\u7684\u6570\u636E\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u4E2D\u95F4\u4EF6</span>
<span class="token keyword">const</span> <span class="token function-variable function">verifyLabelExists</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u83B7\u53D6\u5BA2\u6237\u7AEF\u4F20\u9012\u8FC7\u6765\u7684\u6240\u6709labels</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> labels <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body

  <span class="token comment">// 2.\u5224\u65AD\u6240\u6709\u7684labels\u4E2Dname\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u4E8Elabel\u8868</span>
  <span class="token keyword">const</span> newLabels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">of</span> labels<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> labelService<span class="token punctuation">.</span><span class="token function">queryLabelByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token keyword">const</span> labelObj <span class="token operator">=</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u83B7\u53D6name\u5BF9\u5E94\u7684label\u7684id =&gt; { name: &quot;\u7BEE\u7403&quot;, id: 1 }</span>
      labelObj<span class="token punctuation">.</span>id <span class="token operator">=</span> result<span class="token punctuation">.</span>id
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u63D2\u5165\uFF0C\u5E76\u4E14\u83B7\u53D6\u63D2\u5165\u4E4B\u540E\u7684id =&gt; { name: &quot;\u6E38\u620F&quot;, id: 7 }</span>
      <span class="token keyword">const</span> insertResult <span class="token operator">=</span> <span class="token keyword">await</span> labelService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
      labelObj<span class="token punctuation">.</span>id <span class="token operator">=</span> insertResult<span class="token punctuation">.</span>insertId
    <span class="token punctuation">}</span>
    newLabels<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>labelObj<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 3.\u6240\u6709\u7684label\u90FD\u53D8\u6210[{ name: &quot;\u54F2\u5B66&quot;, id: 7}, { name: &quot;\u7231\u60C5&quot;, id: 8 }]</span>
  ctx<span class="token punctuation">.</span>labels <span class="token operator">=</span> newLabels

  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> verifyLabelExists

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199-controller-\u5C42-3" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199-controller-\u5C42-3" aria-hidden="true">#</a> 3.\u7F16\u5199 controller \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// controller/label_controller.js</span>
<span class="token keyword">const</span> labelService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/label_service&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">labelRouter</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u6570\u636E</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body

    <span class="token comment">// 2.\u64CD\u4F5C\u6570\u636E\u5E93</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> labelService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>

    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u521B\u5EFA\u6807\u7B7E\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">async</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u83B7\u53D6\u6807\u7B7E\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> result
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">labelRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u7F16\u5199-service-\u5C42-2" tabindex="-1"><a class="header-anchor" href="#_4-\u7F16\u5199-service-\u5C42-2" aria-hidden="true">#</a> 4.\u7F16\u5199 service \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// service/label_service.js</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../app/database&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">LabelService</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">insert into label (name) values (?)</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">queryLabelByName</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from label where name = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LabelService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5934\u50CF\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u5934\u50CF\u4E0A\u4F20" aria-hidden="true">#</a> \u5934\u50CF\u4E0A\u4F20</h2><h3 id="_1-\u7F16\u5199-router-\u5C42-5" tabindex="-1"><a class="header-anchor" href="#_1-\u7F16\u5199-router-\u5C42-5" aria-hidden="true">#</a> 1.\u7F16\u5199 router \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// router/file_router.js</span>
<span class="token keyword">const</span> KoaRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> verifyAuth <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/login_middleware&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> handleAvatar <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../middleware/file_middleware&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> create <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controller/file_controller&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fileRouter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KoaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/file&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5934\u50CF\u4E0A\u4F20</span>
fileRouter<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/avatar&#39;</span><span class="token punctuation">,</span> verifyAuth<span class="token punctuation">,</span> handleAvatar<span class="token punctuation">,</span> create<span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> fileRouter

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u7F16\u5199handleavatar-\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u7F16\u5199handleavatar-\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 2.\u7F16\u5199<code>handleAvatar</code> \u4E2D\u95F4\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// middleware/file_middleware.js</span>
<span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@koa/multer&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/path&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4E0A\u4F20\u5934\u50CF\u4E2D\u95F4\u4EF6</span>
<span class="token keyword">const</span> uploadAvatar <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token constant">UPLOAD_PATH</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> handleAvatar <span class="token operator">=</span> uploadAvatar<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">&#39;avatar&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  handleAvatar
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u7F16\u5199-controller-\u5C42-4" tabindex="-1"><a class="header-anchor" href="#_3-\u7F16\u5199-controller-\u5C42-4" aria-hidden="true">#</a> 3.\u7F16\u5199 controller \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// controller/file_controller.js</span>
<span class="token keyword">const</span> fileService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/file_service&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> userService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/user_service&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">SERVER_HOST</span><span class="token punctuation">,</span> <span class="token constant">SERVER_PORT</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/server&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">fileController</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u83B7\u53D6\u5BF9\u5E94\u7684\u4FE1\u606F</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> filename<span class="token punctuation">,</span> mimetype<span class="token punctuation">,</span> size <span class="token punctuation">}</span> <span class="token operator">=</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>file
    <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>user

    <span class="token comment">// 2.\u5C06\u56FE\u7247\u4FE1\u606F\u548Cid\u7ED3\u5408\u8D77\u6765\u8FDB\u884C\u6570\u636E\u5E93\u5B58\u50A8</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> fileService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mimetype<span class="token punctuation">,</span> size<span class="token punctuation">,</span> id<span class="token punctuation">)</span>

    <span class="token comment">// 3.\u5C06\u5934\u50CF\u7684url\uFF0C\u4FDD\u5B58\u5728user\u8868</span>
    <span class="token keyword">const</span> avatarUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">SERVER_HOST</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">SERVER_PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/users/avatar/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token keyword">await</span> userService<span class="token punctuation">.</span><span class="token function">updateUserAvatar</span><span class="token punctuation">(</span>avatarUrl<span class="token punctuation">,</span> id<span class="token punctuation">)</span>

    <span class="token comment">// 4.\u8FD4\u56DE\u7ED3\u679C</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u5934\u50CF\u4E0A\u4F20\u6210\u529F&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> avatarUrl
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fileController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u7F16\u5199-service-\u5C42-3" tabindex="-1"><a class="header-anchor" href="#_4-\u7F16\u5199-service-\u5C42-3" aria-hidden="true">#</a> 4.\u7F16\u5199 service \u5C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// service/file_service.js</span>
<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../app/database&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">FileService</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">filename<span class="token punctuation">,</span> mimetype<span class="token punctuation">,</span> size<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">insert into avatar (filename, mimetype, size, user_id) values (?, ?, ?, ?)</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>filename<span class="token punctuation">,</span> mimetype<span class="token punctuation">,</span> size<span class="token punctuation">,</span> userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">queryAvatarWithUserId</span><span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> statement <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from avatar where user_id = ?</span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>result<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> <span class="token punctuation">[</span>userId<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// \u62FF\u5230\u6700\u65B0\u7684\u5934\u50CF</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileService</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,85);function b(y,w){const a=i("ExternalLinkIcon");return e(),p("div",null,[n("h2",u,[r,k,n("a",d,[v,o(a)])]),m])}const h=t(l,[["render",b],["__file","coderhub.html.vue"]]);export{h as default};
